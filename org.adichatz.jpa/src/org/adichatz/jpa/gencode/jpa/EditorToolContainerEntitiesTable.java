/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 21 12:39:59 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.jpa;

import org.adichatz.common.ejb.util.IEntityConstants;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.AWidgetController;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.TableController;
import org.adichatz.engine.controller.field.TableColumnController;
import org.adichatz.engine.core.ATabularCore;
import org.adichatz.engine.data.AEntity;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.extra.ColumnViewerSorter;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.tabular.ATabularContentProvider;
import org.adichatz.engine.viewer.NativeContentProvider;
import org.adichatz.jpa.editor.EditorOutlineInput;
import org.eclipse.swt.graphics.Image;

@AdiResourceURI(URI="adi://org.adichatz.jpa/jpa/EditorToolContainer")
public class EditorToolContainerEntitiesTable extends ATabularCore<AEntity> {
	// the TableColumnController entityIdTCTC.
	private TableColumnController entityIdTCTC;
	// the TableColumnController identifierTCTC.
	private TableColumnController identifierTCTC;
	public EditorToolContainerEntitiesTable(final AdiContext context, IContainerController parentController) {
		super(context);
		tabularController = new TableController<AEntity>("entitiesTable", parentController, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					beanClass = AEntity.class;
				}
				super.createControl();
				if (isValid()) {
					ATabularContentProvider contentProvider$1 = new NativeContentProvider("entities");
					contentProvider$1.setTabularController(tabularController);
					getControl().setLayoutData("height 0:n:n, w 0:n:n");
				}
			}
		};
		tabularController.setPluginResources(AdichatzApplication.getPluginResources("org.adichatz.jpa"));
		coreController = tabularController;
		
		// Creates control for TableColumnController entityIdTCTC
		entityIdTCTC = new TableColumnController<AEntity>("entityIdTC", tabularController) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getColumn().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "editorOutline", "entity"));
					setColumnViewerSorter(ColumnViewerSorter.ASC);
				}
			}
			@Override
			public Image getColumnImage(AEntity row) {
				if (((EditorOutlineInput) ((AWidgetController) getFromRegister("editorOutline")).getEntity().getBean()).hasError(row))
					return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_ERROR_ENTITY.png");
				switch (row.getStatus()) {
				case IEntityConstants.MERGE:					
					return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_UPDATE_ENTITY.png");
				case IEntityConstants.REMOVE:					
					return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_DELETE_ENTITY.png");
				case IEntityConstants.PERSIST:					
					return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_CREATE_ENTITY.png");
				}
				return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_ENTITY.png");
								    	
			}
			@Override
			public String getValue(AEntity row) {
				return getColumnText(row);
			}
			@Override
			public String getColumnText(AEntity row) {
				return row.getEntityMM().getEntityId();
			}
		};
		// Creates control for TableColumnController identifierTCTC
		identifierTCTC = new TableColumnController<AEntity>("identifierTC", tabularController) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getColumn().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "editorOutline", "identifier"));
					setColumnViewerSorter(ColumnViewerSorter.ASC);
				}
			}
			@Override
			public String getValue(AEntity row) {
				return getColumnText(row);
			}
			@Override
			public String getColumnText(AEntity row) {
				return String.valueOf(row.getBeanId());
			}
		};
	}
	
	@Override
	public Object getId(Object element) {
		return null;
	}
}