/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 21 12:39:48 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.common;

import net.miginfocom.swt.MigLayout;
import org.adichatz.common.ejb.QueryResult;
import org.adichatz.engine.action.AAction;
import org.adichatz.engine.common.AdiPluginResources;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.common.EngineTools;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.action.ActionController;
import org.adichatz.engine.controller.collection.ATabularController;
import org.adichatz.engine.controller.collection.CompositeController;
import org.adichatz.engine.controller.collection.ContainerController;
import org.adichatz.engine.controller.collection.IncludeController;
import org.adichatz.engine.controller.collection.ManagedToolBarController;
import org.adichatz.engine.core.AContainerCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.listener.AdiEvent;
import org.adichatz.engine.listener.IEventType;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.plugin.ParamMap;
import org.adichatz.engine.validation.ABindingListener;
import org.eclipse.jface.viewers.StructuredSelection;

@AdiResourceURI(URI="adi://org.adichatz.jpa/common/NewEntityPart")
public class NewEntityPart extends AContainerCore {
	// the ManagedToolBarController managedToolBarWrapper$$1TB.
	protected ManagedToolBarController managedToolBarWrapper$$1TB;
	// the ActionController saveNewEntityACT.
	private ActionController saveNewEntityACT;
	// the CompositeController detailCMPCMPS.
	protected CompositeController detailCMPCMPS;
	// the IncludeController detailINCINCL.
	private IncludeController detailINCINCL;
	/**
	 * Instantiates a new NewEntityPart.
	 * 
	 * This constructor could be used by dynamic controller.
	 * 
	 * @param parentContext
	 *            the parent context
	 * @param parentController
	 *            the parent controller
	 */
	public NewEntityPart(AdiContext parentContext, IContainerController parentController) {
		super(null, parentController, null);
		coreController = parentController;
	}

	/**
	 * Creates the part NewEntityPart.
	 *
	 * @param pluginResources
	 *            the plugin resources
	 * @param coreController
	 *            the parent controller
	 * @param paramMap
	 *            the param map
	*/
	public NewEntityPart(AdiPluginResources pluginResources, IContainerController coreController, ParamMap paramMap) {
		super(pluginResources, coreController, paramMap);
		coreController.getComposite().setLayout(new MigLayout("wrap, ins 0","grow,fill","grow,fill"));
		createContents();
	}

	/**
	 * creates contents
	 */
	public void createContents(){
		// Creates control for ManagedToolBarController managedToolBarWrapper$$1TB
		managedToolBarWrapper$$1TB = new ManagedToolBarController("managedToolBarWrapper$$1", coreController, this);
		// Creates control for ActionController saveNewEntityACT
		saveNewEntityACT = new ActionController("saveNewEntity", managedToolBarWrapper$$1TB, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					action =  new AAction() {
						@Override
						public void runAction() {
							ATabularController tabularController = ((ATabularController) context.getParam("TABULAR_CONTROLLER"));
							tabularController.getQueryManager().getEntityMM().getDataAccess().saveEntities(getBindingService(), getEntity());
							QueryResult queryResult = tabularController.getQueryManager().getQueryResult();
							queryResult.getQueryResultList().add(getEntity().getBean());
							queryResult.setQueryCount(queryResult.getQueryCount() + 1);
							tabularController.getViewer().refresh();
							tabularController.getViewer().setSelection(new StructuredSelection(getEntity().getBean()));
							tabularController.invokeControlMethod(ATabularController.METHOD_NAME.setTopIndex);
							getBindingService().close();
							((ContainerController) getGenCode().getContext().getRootCore().getController()).getFormInput().getWindow().close();
						}
						@Override
						public void init() {
							super.init();
							setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_ACCEPT"));
							setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "adichatzJpa", "save.new.entity"));
						}
					};
					action.setActionController(this);
				}
				super.createControl();
				if (isValid()) {
					getControl().setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_ACCEPT"));
					getControl().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "adichatzJpa", "save.new.entity"));
				}
			}
		};
		// Creates control for CompositeController detailCMPCMPS
		detailCMPCMPS = new CompositeController("detailCMP", coreController, this) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					ABindingListener detailCMPLSTN$0 = new ABindingListener(IEventType.POST_MESSAGE) {
						@Override
						public void handleEvent(AdiEvent event) {
							((ActionController) getFromRegister("saveNewEntity")).setEnabled(bindingService.getErrorMessageMap().isEmpty());
						}
					};
					getBindingService().addBindingListener(detailCMPLSTN$0);
					getComposite().setLayout(new MigLayout("wrap, ins 0","grow,fill","grow,fill"));
				}
			}
		};
		// Creates control for IncludeController detailINCINCL
		String detailINCIK = ((String) context.getParam("DETAIL_RESOURCE_URI"));
		if (!EngineTools.isEmpty(detailINCIK)) {
			final String[] detailINCKeys = EngineTools.getInstanceKeys(detailINCIK);
			detailINCINCL = new IncludeController("detailINC", detailCMPCMPS, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					// loads and instantiates the class detailINCINCL.
					pluginResources = null == detailINCKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(detailINCKeys[0]);
					instantiateIncludeClass(pluginResources, detailINCKeys[2], detailINCKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "detailINC", context});
				}
			};
		}
	}
}