/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 21 12:39:48 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.common;

import net.miginfocom.swt.MigLayout;
import org.adichatz.engine.common.AdiPluginResources;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.common.EngineTools;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.ATabularController;
import org.adichatz.engine.controller.collection.IncludeController;
import org.adichatz.engine.core.AContainerCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.listener.AControlListener;
import org.adichatz.engine.listener.AdiEvent;
import org.adichatz.engine.listener.IEventType;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.plugin.ParamMap;

@AdiResourceURI(URI="adi://org.adichatz.jpa/common/DefaultRefText")
public class DefaultRefText extends AContainerCore {
	// the IncludeController tableCMINCL.
	private IncludeController tableCMINCL;
	// the IncludeController tableINCL.
	private IncludeController tableINCL;
	/**
	 * Instantiates a new DefaultRefText.
	 * 
	 * This constructor could be used by dynamic controller.
	 * 
	 * @param parentContext
	 *            the parent context
	 * @param parentController
	 *            the parent controller
	 */
	public DefaultRefText(AdiContext parentContext, IContainerController parentController) {
		super(null, parentController, null);
		coreController = parentController;
	}

	/**
	 * Creates the part DefaultRefText.
	 *
	 * @param pluginResources
	 *            the plugin resources
	 * @param coreController
	 *            the parent controller
	 * @param paramMap
	 *            the param map
	*/
	public DefaultRefText(AdiPluginResources pluginResources, IContainerController coreController, ParamMap paramMap) {
		super(pluginResources, coreController, paramMap);
		coreController.getComposite().setLayout(new MigLayout("wrap, ins 0","grow,fill","grow,fill"));
		addCustomization("table:table", new AControlListener("Customization#1", IEventType.AFTER_CREATE_CONTROL) {
			@Override
			public void handleEvent(AdiEvent event) {
				if (controller.isValid()) {
					ATabularController aTabularController$$1 = (ATabularController) controller;
					// Creates control for IncludeController tableCMINCL
					String tableCMIK = ((String) context.getParam("CONTEXT_MENU"));
					if (!EngineTools.isEmpty(tableCMIK)) {
						final String[] tableCMKeys = EngineTools.getInstanceKeys(tableCMIK);
						tableCMINCL = new IncludeController("tableCM", aTabularController$$1, new EntityManagerCore(getContext())) {
							@Override
							public void createContents() {
								// loads and instantiates the class tableCMINCL.
								pluginResources = null == tableCMKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(tableCMKeys[0]);
								instantiateIncludeClass(pluginResources, tableCMKeys[2], tableCMKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "tableCM", context});
							}
						};
					}
					((ATabularController) controller).getControl().setLayoutData("width 0:300:n, height 0:200:n");
				}
			}
		});
		addCustomization("table:table", new AControlListener("Customization#2", IEventType.AFTER_END_LIFE_CYCLE) {
			@Override
			public void handleEvent(AdiEvent event) {
				if (controller.isValid()) {
					((ATabularController) controller).refresh();
				}
			}
		});
		createContents();
	}

	/**
	 * creates contents
	 */
	public void createContents(){
		// Creates control for IncludeController tableINCL
		String tableIK = ((String) context.getParam("TABLE_RESOURCE_URI"));
		if (!EngineTools.isEmpty(tableIK)) {
			final String[] tableKeys = EngineTools.getInstanceKeys(tableIK);
			tableINCL = new IncludeController("table", coreController, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					getParamMap().put("CONTENT_PROVIDER", context.getParam("CONTENT_PROVIDER"));
					// loads and instantiates the class tableINCL.
					pluginResources = null == tableKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(tableKeys[0]);
					instantiateIncludeClass(pluginResources, tableKeys[2], tableKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "table", context});
				}
			};
		}
	}
}