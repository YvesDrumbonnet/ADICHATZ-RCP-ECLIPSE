/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 21 12:39:52 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.common.toolBar;

import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.nebula.ActionPGroupToolItemController;
import org.adichatz.engine.controller.nebula.PGroupController;
import org.adichatz.engine.core.AIncludeCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.plugin.ParamMap;
import org.adichatz.jpa.action.AddOTOEntityAction;
import org.adichatz.jpa.action.DeleteOTOEntityAction;
import org.adichatz.jpa.action.RefreshOTOEntityAction;

@AdiResourceURI(URI="adi://org.adichatz.jpa/common.toolBar/PGroupOneToOneDetailTBM")
public class PGroupOneToOneDetailTBM extends AIncludeCore {
	// the PGroupController masterPGroupPGRP.
	protected PGroupController masterPGroupPGRP;
	// the PGroupController masterPGroupPGRP.
	// the ActionPGroupToolItemController refreshOTOEntityItemPGTI.
	private ActionPGroupToolItemController refreshOTOEntityItemPGTI;
	// the ActionPGroupToolItemController addOTOEntityItemPGTI.
	private ActionPGroupToolItemController addOTOEntityItemPGTI;
	// the ActionPGroupToolItemController deleteOTOEntityItemPGTI.
	private ActionPGroupToolItemController deleteOTOEntityItemPGTI;
	/**
	 * Instantiates a new PGroupOneToOneDetailTBM.
	 * 
	 * This constructor could be used by Column parameter. (see org.adichatz.jpa)
	 * 
	 * @param parentContext
	 *            the parent context
	 * @param parentController
	 *            the parent controller
	 */
	public PGroupOneToOneDetailTBM(AdiContext parentContext, IContainerController parentController) {
		coreController = parentController;
	}

	/**
	 * Creates the include PGroupOneToOneDetailTBM.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param parent controller
	 *            The collection parentController
	 * @param id
	 *            The include id
	 * @param parentContext
	 *            The parent context
	 */
	public PGroupOneToOneDetailTBM(ParamMap paramMap, IContainerController parentController, String id, AdiContext parentContext) {
		super(paramMap, parentController, id, parentContext);
		coreController = parentController;
	}

	/**
	 * creates contents
	 */
	public void createContents(){
		// control is referenced by content of widgetWrapper.getRef masterPGroupPGRP
		masterPGroupPGRP = (PGroupController) coreController;
		// Creates control for ActionPGroupToolItemController refreshOTOEntityItemPGTI
		refreshOTOEntityItemPGTI = new ActionPGroupToolItemController("refreshOTOEntityItem", masterPGroupPGRP, this) {
			@Override
			public void initialize() {
				getParamMap().put("CONTROLLER", context.getParam("CONTROLLER"));
				super.initialize();
			}
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					setAction(new RefreshOTOEntityAction());
				}
			}
		};
		// Creates control for ActionPGroupToolItemController addOTOEntityItemPGTI
		addOTOEntityItemPGTI = new ActionPGroupToolItemController("addOTOEntityItem", masterPGroupPGRP, this) {
			@Override
			public void initialize() {
				getParamMap().put("CONTROLLER", context.getParam("CONTROLLER"));
				super.initialize();
			}
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					setAction(new AddOTOEntityAction());
				}
			}
		};
		// Creates control for ActionPGroupToolItemController deleteOTOEntityItemPGTI
		deleteOTOEntityItemPGTI = new ActionPGroupToolItemController("deleteOTOEntityItem", masterPGroupPGRP, this) {
			@Override
			public void initialize() {
				getParamMap().put("CONTROLLER", context.getParam("CONTROLLER"));
				super.initialize();
			}
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					setAction(new DeleteOTOEntityAction());
				}
			}
		};
	}
}