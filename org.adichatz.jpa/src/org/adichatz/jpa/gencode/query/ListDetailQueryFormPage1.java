/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Tue Jul 07 12:30:04 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.query;

import net.miginfocom.swt.MigLayout;
import org.adichatz.engine.cache.IEntity;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.common.EngineConstants;
import org.adichatz.engine.common.EngineTools;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.CompositeBagController;
import org.adichatz.engine.controller.collection.FormPageController;
import org.adichatz.engine.controller.collection.IncludeController;
import org.adichatz.engine.controller.collection.SashFormController;
import org.adichatz.engine.core.AFormPageCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.plugin.ParamMap;
import org.adichatz.jpa.gencode.common.toolBar.MasterDetailTBM;

@AdiResourceURI(URI="adi://org.adichatz.jpa/query/ListDetailQueryForm")
public class ListDetailQueryFormPage1 extends AFormPageCore {
	// the FormPageController page1FP.
	protected FormPageController page1FP;
	// the IncludeController fullTextIncludeINCL.
	private IncludeController fullTextIncludeINCL;
	// the IncludeController masterDetailTBMINCL.
	private IncludeController masterDetailTBMINCL;
	// the SashFormController listDetailSashFormSHSF.
	protected SashFormController listDetailSashFormSHSF;
	// the IncludeController tableIncludeINCL.
	private IncludeController tableIncludeINCL;
	// the CompositeBagController dependenciesCompositeBagCMPB.
	protected CompositeBagController dependenciesCompositeBagCMPB;
	// the IncludeController detailIncludeINCL.
	private IncludeController detailIncludeINCL;
	/**
	 * Creates the formPage ListDetailQueryFormPage1.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param parentController
	 *            The parent controller
	 * @param managedForm
	 *            The managed form
	 */
	public ListDetailQueryFormPage1(final AdiContext context, IContainerController parentController) {
		super(context);
		this.parentController = parentController;
		createContents();
	}

	/**
	 * Create contents for FormPage
	 */
	public void createContents(){
		// Creates control for FormPageController page1FP
		page1FP = new FormPageController("Page1", parentController, this) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getForm().setText(getFormPageText());
					getComposite().setLayout(new MigLayout("wrap, ins 0","[grow,fill]","[grow,fill]"));
				}
			}
			@Override
			public IEntity getInitialEntity() {
				return coreController.getParentController().getEntity();
			}
		};
		coreController = page1FP;
		// Creates control for IncludeController fullTextIncludeINCL
		String fullTextIncludeIK = ((String) context.getParam("FULLTEXT_RESOURCE_URI"));
		if (!EngineTools.isEmpty(fullTextIncludeIK)) {
			final String[] fullTextIncludeKeys = EngineTools.getInstanceKeys(fullTextIncludeIK);
			fullTextIncludeINCL = new IncludeController("fullTextInclude", page1FP, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					// loads and instantiates the class for 'fullTextIncludeINCL' include wrapper.
					pluginResources = null == fullTextIncludeKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(fullTextIncludeKeys[0]);
					instantiateIncludeClass(pluginResources, fullTextIncludeKeys[2], fullTextIncludeKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "fullTextInclude", context});
				}
			};
		}
		// Creates control for IncludeController masterDetailTBMINCL
		String masterDetailTBMIK = "adi://org.adichatz.jpa/common.toolBar/MasterDetailTBM";
		if (!EngineTools.isEmpty(masterDetailTBMIK)) {
			final String[] masterDetailTBMKeys = EngineTools.getInstanceKeys(masterDetailTBMIK);
			masterDetailTBMINCL = new IncludeController("masterDetailTBM", page1FP, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					// loads and instantiates the class for 'masterDetailTBMINCL' include wrapper.
					if (null != EngineConstants.GENERATOR) {
						pluginResources = null == masterDetailTBMKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(masterDetailTBMKeys[0]);
						instantiateIncludeClass(pluginResources, masterDetailTBMKeys[2], masterDetailTBMKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "masterDetailTBM", context});
					} else
						new MasterDetailTBM(getParamMap(), this, "masterDetailTBM", context).createContents();
				}
			};
		}
		// Creates control for SashFormController listDetailSashFormSHSF
		listDetailSashFormSHSF = new SashFormController("ListDetailSashForm", page1FP, this) {
			@Override
			public void endLifeCycle() {
				delegateAfterEndLifeCycleListener = true;
				super.endLifeCycle();
				if (isValid()) {
					getControl().setWeights(new int[]{1,1});
				}
			}
		};
		// Creates control for IncludeController tableIncludeINCL
		String tableIncludeIK = ((String) context.getParam("TABLE_RESOURCE_URI"));
		if (!EngineTools.isEmpty(tableIncludeIK)) {
			final String[] tableIncludeKeys = EngineTools.getInstanceKeys(tableIncludeIK);
			tableIncludeINCL = new IncludeController("tableInclude", listDetailSashFormSHSF, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					// loads and instantiates the class for 'tableIncludeINCL' include wrapper.
					pluginResources = null == tableIncludeKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(tableIncludeKeys[0]);
					instantiateIncludeClass(pluginResources, tableIncludeKeys[2], tableIncludeKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "tableInclude", context});
				}
				@Override
				public void addParams() {
					getParamMap().put("CONTENT_PROVIDER", context.getParam("CONTENT_PROVIDER"));
				}
			};
		}
		// Creates control for CompositeBagController dependenciesCompositeBagCMPB
		dependenciesCompositeBagCMPB = new CompositeBagController("DependenciesCompositeBag", listDetailSashFormSHSF, this);
		// Creates control for IncludeController detailIncludeINCL
		String detailIncludeIK = ((String) context.getParam("DETAIL_RESOURCE_URI"));
		if (!EngineTools.isEmpty(detailIncludeIK)) {
			final String[] detailIncludeKeys = EngineTools.getInstanceKeys(detailIncludeIK);
			detailIncludeINCL = new IncludeController("detailInclude", dependenciesCompositeBagCMPB, new EntityManagerCore(getContext())) {
				@Override
				public void createContents() {
					// loads and instantiates the class for 'detailIncludeINCL' include wrapper.
					pluginResources = null == detailIncludeKeys[0] ? getPluginResources() : AdichatzApplication.getPluginResources(detailIncludeKeys[0]);
					instantiateIncludeClass(pluginResources, detailIncludeKeys[2], detailIncludeKeys[1], new Class[] {ParamMap.class, IContainerController.class, String.class, AdiContext.class}, new Object[] {getParamMap(), this, "detailInclude", context});
				}
				@Override
				public void addParams() {
					getParamMap().put("TOOL_BAR", "adi://org.adichatz.jpa/common.toolBar/SectionDetailTBM");
					getParamMap().put("TOOL_BAR_TYPE", "CHILD");
				}
			};
		}
	}

	
	//* *****************
	//* Additional code *
	//*******************
	private String getFormPageText() {
	String formText = ((String) context.getParam("FORM_TEXT"));
	if (null == formText)
		formText = AdichatzApplication.getInstance().getMessageBundle(((String) context.getParam("MESSAGE_BUNDLE")), "listDetailFormText");
	return formText;
		}
}