/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 21 14:35:36 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.query;

import java.util.function.BooleanSupplier;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.action.ActionController;
import org.adichatz.engine.controller.collection.MenuManagerController;
import org.adichatz.engine.controller.collection.TableController;
import org.adichatz.engine.controller.field.TableColumnController;
import org.adichatz.engine.controller.utils.ElementaryAccessibility;
import org.adichatz.engine.core.ATabularCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.tabular.ATabularContentProvider;
import org.adichatz.engine.viewer.NativeContentProvider;
import org.adichatz.jpa.query.action.CopyTextAction;
import org.adichatz.jpa.xjc.FilterType;

@AdiResourceURI(URI="adi://org.adichatz.jpa/query/QueryToolContainer")
public class QueryToolContainerFilterPrefTable extends ATabularCore<FilterType> {
	// the MenuManagerController filterContextMenuMM.
	protected MenuManagerController filterContextMenuMM;
	// the ActionController copyTextNameACT.
	private ActionController copyTextNameACT;
	// the TableColumnController textTCTC.
	private TableColumnController textTCTC;
	public QueryToolContainerFilterPrefTable(final AdiContext context, IContainerController parentController) {
		super(context);
		tabularController = new TableController<FilterType>("filterPrefTable", parentController, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					beanClass = FilterType.class;
				}
				super.createControl();
				if (isValid()) {
					ATabularContentProvider contentProvider$1 = new NativeContentProvider("viewerFilters");
					contentProvider$1.setTabularController(tabularController);
					getControl().setHeaderVisible(false);
					getControl().setLayoutData("h 100:n:n");
				}
			}
			@Override
			public void endLifeCycle() {
				delegateAfterEndLifeCycleListener = true;
				super.endLifeCycle();
				if (isValid()) {
					refresh();
				}
			}
		};
		tabularController.setPluginResources(AdichatzApplication.getPluginResources("org.adichatz.jpa"));
		coreController = tabularController;
		
		// Add context menu
		// Creates control for MenuManagerController filterContextMenuMM
		filterContextMenuMM = new MenuManagerController("filterContextMenu", tabularController, this) {
			@Override
			public void startLifeCycle() {
				super.startLifeCycle();
					// Creates control for ActionController copyTextNameACT
					copyTextNameACT = new ActionController("copyTextName", filterContextMenuMM, QueryToolContainerFilterPrefTable.this) {
						@Override
						public void initialize() {
							super.initialize();
							BooleanSupplier evaluatorENABLED;
							evaluatorENABLED = new BooleanSupplier() {
								public boolean getAsBoolean() {
									return null != tabularController.getSelectedObject();
								}
							};
							addAccessibility(new ElementaryAccessibility(ElementaryAccessibility.ACCESS_ATTRIBUTE.ENABLED, evaluatorENABLED));
						}
						@Override
						public void createControl() {
							if (isValid()) {
								action = new CopyTextAction();
								action.setActionController(this);
							}
							super.createControl();
						}
					};
			}
		};
		
		// Creates control for TableColumnController textTCTC
		textTCTC = new TableColumnController<FilterType>("textTC", tabularController) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getColumn().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "viewerFilter", "text"));
				}
			}
			@Override
			public String getValue(FilterType row) {
				return row.getText();
			}
			@Override
			public String getColumnText(FilterType row) {
				return row.getText();
			}
		};
	}
	
	@Override
	public Object getId(Object element) {
		return null;
	}
}