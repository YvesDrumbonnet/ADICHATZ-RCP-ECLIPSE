/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Tue Jul 07 18:46:56 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.jpa.gencode.query;

import net.miginfocom.swt.MigLayout;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.AWidgetController;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.CompositeController;
import org.adichatz.engine.controller.field.EditableFormTextController;
import org.adichatz.engine.controller.field.LabelController;
import org.adichatz.engine.controller.field.TextController;
import org.adichatz.engine.core.ControllerCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.listener.AEntityListener;
import org.adichatz.engine.listener.AdiEntityEvent;
import org.adichatz.engine.listener.IEventType;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.validation.EntityInjection;
import org.adichatz.jpa.query.QueryToolInput;
import org.eclipse.swt.SWT;

@AdiResourceURI(URI="adi://org.adichatz.jpa/query/QueryToolContainer")
public class QueryToolContainerOrderByCMP extends EntityManagerCore {
	// the LabelController orderByClauseLblLBL.
	private LabelController orderByClauseLblLBL;
	// the TextController orderByClauseTXT.
	private TextController orderByClauseTXT;
	/**
	 * Creates QueryToolContainerOrderByCMP.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param core controller
	 *            The collection controller linked to the class
	 */
	public QueryToolContainerOrderByCMP(final AdiContext context, IContainerController parentController) {
		super(context);
		// do not create contents when context is null because that means that class is invoked from dynamic part
		if (null != context) {
			coreController = new CompositeController("orderByCMP", parentController, this) {
				@Override
				public void afterInstantiateController() {
					breakInjection = true;
					super.afterInstantiateController();
				}
				@Override
				public void createControl() {
					super.createControl();
					if (isValid()) {
						getComposite().setLayout(new MigLayout("ins 10 5 5 5, wrap 2","[]15[grow, fill]",null));
					}
				}
				@Override
				public void synchronize() {
					super.synchronize();
					if (isValid()) {
						AEntityListener orderByCMPLSTN$0 = new AEntityListener("AFTER_PROPERTY_CHANGE", coreController, IEventType.AFTER_PROPERTY_CHANGE) {
							@Override
							public void handleEntityEvent(AdiEntityEvent event) {
								((EditableFormTextController) getFromRegister("jpqlOrder")).getControl().setText(((QueryToolInput) ((AWidgetController) getFromRegister("queryTool")).getEntity().getBean()).getQueryFormText());
							}
						};
					}
				}
				@Override
				public EntityInjection getEntityInjection() {
					if (null == entityInjection)
						entityInjection = new EntityInjection(this, getDataAccess().getDataCache().fetchEntity(((QueryToolInput) ((AWidgetController) getFromRegister("queryTool")).getEntity().getBean()).getQueryPreference()));
					return entityInjection;
				}
			};
			createContents();
		} else
			coreController = parentController;
	}

	/**
	 * creates contents for controller
	 */
	public void createContents(){
		// Creates control for LabelController orderByClauseLblLBL
		orderByClauseLblLBL = new LabelController("orderByClauseLbl", coreController, this) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.jpa", "adichatzJpa", "preference.orderByClause"));
				}
			}
		};
		createOrderByClause(this);
	}
	public TextController createOrderByClause(ControllerCore genCode) {
		// Creates control for TextController orderByClauseTXT
		orderByClauseTXT = new TextController("orderByClause", getParentController(coreController), genCode) {
			@Override
			public void initialize() {
				setProperty("orderByClause");
				super.initialize();
			}
			@Override
			public void createControl() {
				if (isValid()) {
					setStyle(SWT.WRAP | SWT.MULTI | SWT.V_SCROLL);
				}
				super.createControl();
				if (isValid()) {
					getControl().setLayoutData("w 20:20:n, h 40:40:n");
				}
			}
		};
		return orderByClauseTXT;
	}
}