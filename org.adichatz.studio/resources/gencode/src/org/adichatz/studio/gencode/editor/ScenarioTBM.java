/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Sat Dec 07 15:19:15 CET 2019
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.editor;

import java.util.function.BooleanSupplier;
import org.adichatz.engine.action.AAction;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.action.ActionController;
import org.adichatz.engine.controller.action.SeparatorController;
import org.adichatz.engine.controller.collection.ManagedToolBarController;
import org.adichatz.engine.controller.utils.ElementaryAccessibility;
import org.adichatz.engine.core.AIncludeCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.plugin.ParamMap;
import org.adichatz.studio.xjc.data.XjcBindingService;
import org.adichatz.studio.xjc.editor.AStudioFormEditor;
import org.adichatz.studio.xjc.editor.action.ErrorStudioAction;
import org.adichatz.studio.xjc.editor.action.GenerateScenarioActionController;
import org.eclipse.swt.SWT;

@AdiResourceURI(URI="adi://org.adichatz.studio/editor/ScenarioTBM")
public class ScenarioTBM extends AIncludeCore {
	// the ManagedToolBarController pageToolBarTB.
	protected ManagedToolBarController pageToolBarTB;
	// the ActionController refreshScenarioActionACT.
	private ActionController refreshScenarioActionACT;
	// the SeparatorController separatorWrapper$$1SPR.
	private SeparatorController separatorWrapper$$1SPR;
	// the ActionController savePageActionACT.
	private ActionController savePageActionACT;
	// the ActionController errorStudioActionACT.
	private ActionController errorStudioActionACT;
	// the SeparatorController separatorWrapper$$2SPR.
	private SeparatorController separatorWrapper$$2SPR;
	// the GenerateScenarioActionController generateScenarioActionACT.
	private GenerateScenarioActionController generateScenarioActionACT;
	/**
	 * Instantiates a new ScenarioTBM.
	 * 
	 * This constructor could be used by Column parameter. (see org.adichatz.jpa)
	 * 
	 * @param parentContext
	 *            the parent context
	 * @param parentController
	 *            the parent controller
	 */
	public ScenarioTBM(AdiContext parentContext, IContainerController parentController) {
		coreController = parentController;
	}

	/**
	 * Creates the include ScenarioTBM.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param parent controller
	 *            The collection parentController
	 * @param id
	 *            The include id
	 * @param parentContext
	 *            The parent context
	 */
	public ScenarioTBM(ParamMap paramMap, IContainerController parentController, String id, AdiContext parentContext) {
		super(paramMap, parentController, id, parentContext);
		coreController = parentController;
	}

	/**
	 * creates contents
	 */
	public void createContents(){
		// Creates control for ManagedToolBarController pageToolBarTB
		pageToolBarTB = new ManagedToolBarController("pageToolBar", coreController, this);
		// Creates control for ActionController refreshScenarioActionACT
		refreshScenarioActionACT = new ActionController("refreshScenarioAction", pageToolBarTB, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					action =  new AAction() {
						@Override
						public void runAction() {
							((XjcBindingService) getBindingService()).getEditor().fileChanged();
						}
						@Override
						public void init() {
							super.init();
							setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_REFRESH"));
							setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "studio.editor.refreshFormPage"));
						}
					};
					action.setActionController(this);
				}
				super.createControl();
				if (isValid()) {
					getControl().setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_REFRESH"));
					getControl().setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "studio.editor.refreshFormPage"));
				}
			}
		};
		// Creates control for SeparatorController separatorWrapper$$1SPR
		separatorWrapper$$1SPR = new SeparatorController("separatorWrapper$$1", pageToolBarTB, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					setStyle(SWT.NONE);
				}
				super.createControl();
			}
		};
		// Creates control for ActionController savePageActionACT
		savePageActionACT = new ActionController("savePageAction", pageToolBarTB, this) {
			@Override
			public void initialize() {
				BooleanSupplier evaluatorENABLED;
				evaluatorENABLED = new BooleanSupplier() {
					public boolean getAsBoolean() {
						return false;
					}
				};
				addAccessibility(new ElementaryAccessibility(ElementaryAccessibility.ACCESS_ATTRIBUTE.ENABLED, evaluatorENABLED));
				super.initialize();
			}
			@Override
			public void createControl() {
				if (isValid()) {
					action =  new AAction() {
						@Override
						public void runAction() {
							((AStudioFormEditor) genCode.getContext().getRootCore().getController()).doSave();
						}
						@Override
						public void init() {
							super.init();
							setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_SAVE"));
							setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "studio.editor.save"));
						}
					};
					action.setActionController(this);
				}
				super.createControl();
				if (isValid()) {
					getControl().setImageDescriptor(AdichatzApplication.getInstance().getFormToolkit().getRegisteredImageDescriptor("IMG_SAVE"));
					getControl().setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "studio.editor.save"));
				}
			}
		};
		// Creates control for ActionController errorStudioActionACT
		errorStudioActionACT = new ActionController("errorStudioAction", pageToolBarTB, this) {
			@Override
			public void initialize() {
				BooleanSupplier evaluatorENABLED;
				evaluatorENABLED = new BooleanSupplier() {
					public boolean getAsBoolean() {
						return false;
					}
				};
				addAccessibility(new ElementaryAccessibility(ElementaryAccessibility.ACCESS_ATTRIBUTE.ENABLED, evaluatorENABLED));
				super.initialize();
			}
			@Override
			public void createControl() {
				if (isValid()) {
					action = new ErrorStudioAction() {
						@Override
						public void init() {
							super.init();
							setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.engine", "adichatzEngine", "error"));
						}
					};
					action.setActionController(this);
				}
				super.createControl();
				if (isValid()) {
					getControl().setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.engine", "adichatzEngine", "error"));
				}
			}
		};
		// Creates control for SeparatorController separatorWrapper$$2SPR
		separatorWrapper$$2SPR = new SeparatorController("separatorWrapper$$2", pageToolBarTB, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					setStyle(SWT.NONE);
				}
				super.createControl();
			}
		};
		// Creates control for GenerateScenarioActionController generateScenarioActionACT
		generateScenarioActionACT = new GenerateScenarioActionController("generateScenarioAction", pageToolBarTB, this) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().setImageDescriptor(AdichatzApplication.getInstance().getImageDescriptor("org.adichatz.studio", "IMG_GENERATE_SCENARIO.png"));
					getControl().setToolTipText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "scenario.generate"));
				}
			}
		};
	}
}