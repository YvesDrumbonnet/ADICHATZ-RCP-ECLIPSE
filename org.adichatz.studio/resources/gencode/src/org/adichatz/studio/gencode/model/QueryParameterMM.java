/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Mon Jul 06 18:33:09 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.AEntityMetaModel;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.QueryParameterType;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/QueryParameterMM")
public class QueryParameterMM extends AXjcEntityMetaModel<QueryParameterType> {
	/**
	 * Creates the MetaModel class for QueryParameterMM.
	 *
	 */
	public QueryParameterMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		pluginEntity.setSuperEntityURI("adi://org.adichatz.studio/model/ElementMM");
		create();
	}

	/**
	 * Create contents for MetaModel QueryParameterMM.
	 */
	public void create(){
		
		/**
		 *  add a property field for field prompt
		 */
		new PropertyField(this, "prompt");
		
		/**
		 *  add a property field for field property
		 */
		new PropertyField(this, "property");
		
		/**
		 *  add a property field for field entityURI
		 */
		new PropertyField(this, "entityURI");
		
		/**
		 *  add a property field for field suffix
		 */
		new PropertyField(this, "suffix");
		
		/**
		 *  add a property field for field valid
		 */
		new PropertyField(this, "valid");
		
		/**
		 *  add a property field for field style
		 */
		new PropertyField(this, "style");
		
		/**
		 *  add a property field for field permanent
		 */
		new PropertyField(this, "permanent");
		
		/**
		 *  add a property field for field visible
		 */
		new PropertyField(this, "visible");
		
		/**
		 *  add a property field for field columnText
		 */
		new PropertyField(this, "columnText");
		
		/**
		 *  add a property field for field binaryExpression
		 */
		new PropertyField(this, "binaryExpression");
		
		/**
		 *  add a property field for field expression
		 */
		new PropertyField(this, "expression");
		
		/**
		 *  add a property field for field operator
		 */
		new PropertyField(this, "operator");
		
		/**
		 *  add a property field for field secondColumnText
		 */
		new PropertyField(this, "secondColumnText");
		
		/**
		 *  add a property field for field binarySecondExpression
		 */
		new PropertyField(this, "binarySecondExpression");
		
		/**
		 *  add a property field for field secondExpression
		 */
		new PropertyField(this, "secondExpression");
		
		/**
		 *  add a property field for field expressionMethodURI
		 */
		new PropertyField(this, "expressionMethodURI");
		
		/**
		 *  add a property field for field expressionClassName
		 */
		new PropertyField(this, "expressionClassName");
		addSuperFields();
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<QueryParameterType> getBeanClass() {
		return QueryParameterType.class;
	}
	@Override
	protected void addSuperFields(){
		AEntityMetaModel<?> superEntityMM = pluginEntity.getPluginEntityTree().getEntityMM("adi://org.adichatz.studio/model/ElementMM");
		fieldMap.putAll(superEntityMM.getFieldMap());
		super.addSuperFields();
	}
}