/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Sat Dec 07 15:15:58 CET 2019
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.AEntityMetaModel;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.RichTextType;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/RichTextMM")
public class RichTextMM extends AXjcEntityMetaModel<RichTextType> {
	/**
	 * Creates the MetaModel class for RichTextMM.
	 *
	 */
	public RichTextMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		pluginEntity.setSuperEntityURI("adi://org.adichatz.studio/model/ControlFieldMM");
		create();
	}

	/**
	 * Create contents for MetaModel RichTextMM.
	 */
	public void create(){
		
		/**
		 *  add a property field for field editable
		 */
		new PropertyField(this, "editable");
		
		/**
		 *  add a property field for field orientation
		 */
		new PropertyField(this, "orientation");
		
		/**
		 *  add a property field for field tabs
		 */
		new PropertyField(this, "tabs");
		
		/**
		 *  add a property field for field text
		 */
		new PropertyField(this, "text");
		
		/**
		 *  add a property field for field textLimit
		 */
		new PropertyField(this, "textLimit");
		
		/**
		 *  add a property field for field containerBackground
		 */
		new PropertyField(this, "containerBackground");
		
		/**
		 *  add a property field for field containerBackgroundImage
		 */
		new PropertyField(this, "containerBackgroundImage");
		
		/**
		 *  add a property field for field containerBounds
		 */
		new PropertyField(this, "containerBounds");
		
		/**
		 *  add a property field for field containerCapture
		 */
		new PropertyField(this, "containerCapture");
		
		/**
		 *  add a property field for field containerFocus
		 */
		new PropertyField(this, "containerFocus");
		
		/**
		 *  add a property field for field containerFont
		 */
		new PropertyField(this, "containerFont");
		
		/**
		 *  add a property field for field containerForeground
		 */
		new PropertyField(this, "containerForeground");
		
		/**
		 *  add a property field for field containerLayoutData
		 */
		new PropertyField(this, "containerLayoutData");
		
		/**
		 *  add a property field for field containerLocation
		 */
		new PropertyField(this, "containerLocation");
		
		/**
		 *  add a property field for field containerMenu
		 */
		new PropertyField(this, "containerMenu");
		
		/**
		 *  add a property field for field containerRedraw
		 */
		new PropertyField(this, "containerRedraw");
		
		/**
		 *  add a property field for field containerSize
		 */
		new PropertyField(this, "containerSize");
		
		/**
		 *  add a property field for field containerStyle
		 */
		new PropertyField(this, "containerStyle");
		addSuperFields();
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<RichTextType> getBeanClass() {
		return RichTextType.class;
	}
	@Override
	protected void addSuperFields(){
		AEntityMetaModel<?> superEntityMM = pluginEntity.getPluginEntityTree().getEntityMM("adi://org.adichatz.studio/model/ControlFieldMM");
		fieldMap.putAll(superEntityMM.getFieldMap());
		super.addSuperFields();
	}
}