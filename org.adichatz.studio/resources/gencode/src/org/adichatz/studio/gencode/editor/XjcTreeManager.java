/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Sat Dec 07 15:19:14 CET 2019
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.editor;

import org.adichatz.engine.common.AdiPluginResources;
import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.common.EngineTools;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.generator.tree.AXjcTreeElement;
import org.adichatz.generator.wrapper.ScenarioTreeWrapper;
import org.adichatz.generator.xjc.AccessibilitiesType;
import org.adichatz.generator.xjc.AccessibilityType;
import org.adichatz.generator.xjc.ActionResourcesType;
import org.adichatz.generator.xjc.ActionType;
import org.adichatz.generator.xjc.ApplicationServerType;
import org.adichatz.generator.xjc.ApplicationServersType;
import org.adichatz.generator.xjc.ArgPShelfType;
import org.adichatz.generator.xjc.ArgTabFolderType;
import org.adichatz.generator.xjc.ButtonBarType;
import org.adichatz.generator.xjc.ButtonType;
import org.adichatz.generator.xjc.CComboType;
import org.adichatz.generator.xjc.CTabFolderType;
import org.adichatz.generator.xjc.CTabItemType;
import org.adichatz.generator.xjc.CheckBoxType;
import org.adichatz.generator.xjc.ClientCanvasType;
import org.adichatz.generator.xjc.CollectionType;
import org.adichatz.generator.xjc.ColumnFieldType;
import org.adichatz.generator.xjc.ColumnPreferenceType;
import org.adichatz.generator.xjc.ColumnPreferencesType;
import org.adichatz.generator.xjc.ComboType;
import org.adichatz.generator.xjc.CompositeBagType;
import org.adichatz.generator.xjc.CompositeSeparatorType;
import org.adichatz.generator.xjc.CompositeType;
import org.adichatz.generator.xjc.ConfigType;
import org.adichatz.generator.xjc.ConnectorTree;
import org.adichatz.generator.xjc.ContainerTree;
import org.adichatz.generator.xjc.ContainerType;
import org.adichatz.generator.xjc.ContentProviderType;
import org.adichatz.generator.xjc.ContributionItemType;
import org.adichatz.generator.xjc.ControlFieldType;
import org.adichatz.generator.xjc.ControlType;
import org.adichatz.generator.xjc.ControllerPreferenceType;
import org.adichatz.generator.xjc.ControllerType;
import org.adichatz.generator.xjc.ControllersType;
import org.adichatz.generator.xjc.CopyResourceType;
import org.adichatz.generator.xjc.CrossReferenceType;
import org.adichatz.generator.xjc.CrossReferencesType;
import org.adichatz.generator.xjc.CustomGenerationUnitType;
import org.adichatz.generator.xjc.CustomPostActionType;
import org.adichatz.generator.xjc.CustomizationClassParamType;
import org.adichatz.generator.xjc.CustomizationsType;
import org.adichatz.generator.xjc.CustomizedPreferenceType;
import org.adichatz.generator.xjc.CustomizedScenarioType;
import org.adichatz.generator.xjc.CustomizedScenariosType;
import org.adichatz.generator.xjc.DatasourceType;
import org.adichatz.generator.xjc.DatasourcesType;
import org.adichatz.generator.xjc.DateTextType;
import org.adichatz.generator.xjc.DateTimeType;
import org.adichatz.generator.xjc.DirtyContainerType;
import org.adichatz.generator.xjc.DynamicClauseType;
import org.adichatz.generator.xjc.EditableFormTextType;
import org.adichatz.generator.xjc.ElementType;
import org.adichatz.generator.xjc.EmbeddedFieldType;
import org.adichatz.generator.xjc.EmbeddedIdFieldType;
import org.adichatz.generator.xjc.EncryptedTextType;
import org.adichatz.generator.xjc.EntityElementType;
import org.adichatz.generator.xjc.EntityElementsType;
import org.adichatz.generator.xjc.EntityParamType;
import org.adichatz.generator.xjc.EntitySetContentProviderType;
import org.adichatz.generator.xjc.EntitySetType;
import org.adichatz.generator.xjc.EntityTree;
import org.adichatz.generator.xjc.ExtendTree;
import org.adichatz.generator.xjc.ExtraTextType;
import org.adichatz.generator.xjc.FieldContainerType;
import org.adichatz.generator.xjc.FieldType;
import org.adichatz.generator.xjc.FileTextType;
import org.adichatz.generator.xjc.FilterType;
import org.adichatz.generator.xjc.FiltersType;
import org.adichatz.generator.xjc.FontTextType;
import org.adichatz.generator.xjc.FormPageType;
import org.adichatz.generator.xjc.FormattedTextType;
import org.adichatz.generator.xjc.GMapType;
import org.adichatz.generator.xjc.GenerationScenarioType;
import org.adichatz.generator.xjc.GenerationUnitType;
import org.adichatz.generator.xjc.GeneratorType;
import org.adichatz.generator.xjc.GeneratorsType;
import org.adichatz.generator.xjc.GenericFieldType;
import org.adichatz.generator.xjc.GridColumnGroupType;
import org.adichatz.generator.xjc.GridColumnType;
import org.adichatz.generator.xjc.GridType;
import org.adichatz.generator.xjc.GroupType;
import org.adichatz.generator.xjc.HeaderMenuManagerType;
import org.adichatz.generator.xjc.HelpButtonType;
import org.adichatz.generator.xjc.HyperlinkType;
import org.adichatz.generator.xjc.IconType;
import org.adichatz.generator.xjc.IconsType;
import org.adichatz.generator.xjc.ImageViewerType;
import org.adichatz.generator.xjc.IncludeTree;
import org.adichatz.generator.xjc.IncludeType;
import org.adichatz.generator.xjc.ItemType;
import org.adichatz.generator.xjc.JointureAliasType;
import org.adichatz.generator.xjc.JointureAliasesType;
import org.adichatz.generator.xjc.JointureType;
import org.adichatz.generator.xjc.JointureTypeEnum;
import org.adichatz.generator.xjc.LabelProviderType;
import org.adichatz.generator.xjc.LabelType;
import org.adichatz.generator.xjc.LayoutType;
import org.adichatz.generator.xjc.LazyFetchContainerType;
import org.adichatz.generator.xjc.ListDetailContentProviderType;
import org.adichatz.generator.xjc.ListenerType;
import org.adichatz.generator.xjc.ListenersType;
import org.adichatz.generator.xjc.ManagedToolBarType;
import org.adichatz.generator.xjc.ManyToManyType;
import org.adichatz.generator.xjc.MenuActionType;
import org.adichatz.generator.xjc.MenuItemType;
import org.adichatz.generator.xjc.MenuManagerType;
import org.adichatz.generator.xjc.MenuType;
import org.adichatz.generator.xjc.MessageType;
import org.adichatz.generator.xjc.MessagesType;
import org.adichatz.generator.xjc.ModelPartType;
import org.adichatz.generator.xjc.MultiChoiceType;
import org.adichatz.generator.xjc.NativeContentProviderType;
import org.adichatz.generator.xjc.NavigationPathType;
import org.adichatz.generator.xjc.NavigationPathsType;
import org.adichatz.generator.xjc.NavigatorTree;
import org.adichatz.generator.xjc.NodeType;
import org.adichatz.generator.xjc.NumericTextType;
import org.adichatz.generator.xjc.OneToManyType;
import org.adichatz.generator.xjc.OneToOneType;
import org.adichatz.generator.xjc.PGroupMenuType;
import org.adichatz.generator.xjc.PGroupToolItemType;
import org.adichatz.generator.xjc.PGroupType;
import org.adichatz.generator.xjc.PShelfItemType;
import org.adichatz.generator.xjc.PShelfType;
import org.adichatz.generator.xjc.ParamType;
import org.adichatz.generator.xjc.ParamsType;
import org.adichatz.generator.xjc.PartTree;
import org.adichatz.generator.xjc.PathElementType;
import org.adichatz.generator.xjc.PathElementsType;
import org.adichatz.generator.xjc.PluginEntityType;
import org.adichatz.generator.xjc.PojoRewriterType;
import org.adichatz.generator.xjc.PojoRewritersType;
import org.adichatz.generator.xjc.PojoSuperClassType;
import org.adichatz.generator.xjc.PreferenceType;
import org.adichatz.generator.xjc.PropertyFieldType;
import org.adichatz.generator.xjc.QueryBuilderType;
import org.adichatz.generator.xjc.QueryContentProviderType;
import org.adichatz.generator.xjc.QueryOpenClauseType;
import org.adichatz.generator.xjc.QueryPaginationType;
import org.adichatz.generator.xjc.QueryParameterType;
import org.adichatz.generator.xjc.QueryPartType;
import org.adichatz.generator.xjc.QueryPreferenceType;
import org.adichatz.generator.xjc.QueryReferenceType;
import org.adichatz.generator.xjc.QueryTree;
import org.adichatz.generator.xjc.RadioGroupType;
import org.adichatz.generator.xjc.RcpPartType;
import org.adichatz.generator.xjc.RefControlType;
import org.adichatz.generator.xjc.RefFieldType;
import org.adichatz.generator.xjc.RefTextType;
import org.adichatz.generator.xjc.RemoveResourceType;
import org.adichatz.generator.xjc.ReplacementType;
import org.adichatz.generator.xjc.ResourceBundleType;
import org.adichatz.generator.xjc.ResourceBundlesType;
import org.adichatz.generator.xjc.RgbTextType;
import org.adichatz.generator.xjc.RichTextType;
import org.adichatz.generator.xjc.SashFormType;
import org.adichatz.generator.xjc.ScenarioType;
import org.adichatz.generator.xjc.ScenariosType;
import org.adichatz.generator.xjc.ScrolledCompositeType;
import org.adichatz.generator.xjc.ScrolledFormType;
import org.adichatz.generator.xjc.SectionType;
import org.adichatz.generator.xjc.SeparatorType;
import org.adichatz.generator.xjc.SetType;
import org.adichatz.generator.xjc.StarRatingType;
import org.adichatz.generator.xjc.TableColumnType;
import org.adichatz.generator.xjc.TableType;
import org.adichatz.generator.xjc.TabularType;
import org.adichatz.generator.xjc.TextColorType;
import org.adichatz.generator.xjc.TextFontType;
import org.adichatz.generator.xjc.TextImageType;
import org.adichatz.generator.xjc.TextType;
import org.adichatz.generator.xjc.ToolBarType;
import org.adichatz.generator.xjc.ToolItemType;
import org.adichatz.generator.xjc.TreeElementType;
import org.adichatz.generator.xjc.TreeManagerTree;
import org.adichatz.generator.xjc.TreeNodeType;
import org.adichatz.generator.xjc.TreeType;
import org.adichatz.generator.xjc.ValidElementType;
import org.adichatz.generator.xjc.ValidableContainerType;
import org.adichatz.generator.xjc.ValidatorType;
import org.adichatz.generator.xjc.ValidatorsType;
import org.adichatz.generator.xjc.WidgetType;
import org.adichatz.studio.xjc.data.AXjcTreeChild;
import org.adichatz.studio.xjc.editor.AStudioTreeManager;
import org.eclipse.swt.graphics.Image;

@AdiResourceURI(URI="adi://org.adichatz.studio/editor/XjcTreeManager")
public class XjcTreeManager extends AStudioTreeManager {
	
	/**
	 * Creates the Tree Manager class for XjcTreeManager.
	 *
	 */
	public XjcTreeManager(AdiPluginResources pluginResources) {
		super(pluginResources);
		treeChildMap.put("adi://org.adichatz.studio/model/AccessibilitiesMM", new AXjcTreeChild(AccessibilitiesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Accessibilities";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"accessibility"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/AccessibilityMM", new AXjcTreeChild(AccessibilityType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Accessibility", ((AccessibilityType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/accessibility.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ActionMM", new AXjcTreeChild(ActionType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Action", ((ActionType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/action.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ActionResourcesMM", new AXjcTreeChild(ActionResourcesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ActionResources";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"copyResource", "removeResource"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ApplicationServerMM", new AXjcTreeChild(ApplicationServerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ApplicationServer";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ApplicationServersMM", new AXjcTreeChild(ApplicationServersType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ApplicationServers";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"applicationServer"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ArgPShelfMM", new AXjcTreeChild(ArgPShelfType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ArgPShelf", ((ArgPShelfType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/argPShelf.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "layout", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ArgTabFolderMM", new AXjcTreeChild(ArgTabFolderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ArgTabFolder", ((ArgTabFolderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/argTabFolder.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "layout", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ButtonBarMM", new AXjcTreeChild(ButtonBarType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ButtonBar", ((ButtonBarType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/buttonBar.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"buttonOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ButtonMM", new AXjcTreeChild(ButtonType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Button", ((ButtonType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/button.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CComboMM", new AXjcTreeChild(CComboType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CCombo", ((CComboType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/combo.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "listeners", "menuManager", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CTabFolderMM", new AXjcTreeChild(CTabFolderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CTabFolder", ((CTabFolderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/cTabFolder.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"cTabItem", "include"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CTabItemMM", new AXjcTreeChild(CTabItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CTabItem", ((CTabItemType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/cTabItem.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "layout", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CheckBoxMM", new AXjcTreeChild(CheckBoxType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CheckBox", ((CheckBoxType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/checkBox.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ClientCanvasMM", new AXjcTreeChild(ClientCanvasType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ClientCanvas", ((ClientCanvasType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CollectionMM", new AXjcTreeChild(CollectionType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Collection", ((CollectionType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ColumnFieldMM", new AXjcTreeChild(ColumnFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ColumnField", ((ColumnFieldType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ColumnPreferenceMM", new AXjcTreeChild(ColumnPreferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ColumnPreference";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/columnPreference.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ColumnPreferencesMM", new AXjcTreeChild(ColumnPreferencesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ColumnPreferences";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/columnPreference.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"columnPreference"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ComboMM", new AXjcTreeChild(ComboType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Combo", ((ComboType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/combo.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "listeners", "menuManager", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CompositeBagMM", new AXjcTreeChild(CompositeBagType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CompositeBag", ((CompositeBagType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/compositeBag.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CompositeMM", new AXjcTreeChild(CompositeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Composite", ((CompositeType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/composite.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CompositeSeparatorMM", new AXjcTreeChild(CompositeSeparatorType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CompositeSeparator", ((CompositeSeparatorType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/compositeSeparator.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ConfigMM", new AXjcTreeChild(ConfigType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Config";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/config.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"customizations", "navigationPaths", "params", "resourceBundles"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ConnectorTreeMM", new AXjcTreeChild(ConnectorTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ConnectorTree";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"applicationServers", "datasources"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ContainerMM", new AXjcTreeChild(ContainerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Container", ((ContainerType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"config"};
				entitySetNames =new String[] {"formPageOrScrolledFormOrSection"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ContainerTreeMM", new AXjcTreeChild(ContainerTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ContainerTree", ((ContainerTree) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"config", "layout", "managedToolBar"};
				entitySetNames =new String[] {"formPageOrScrolledFormOrSection"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ContentProviderMM", new AXjcTreeChild(ContentProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ContentProvider", ((ContentProviderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/contentProvider.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ContributionItemMM", new AXjcTreeChild(ContributionItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ContributionItem", ((ContributionItemType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ControlFieldMM", new AXjcTreeChild(ControlFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ControlField", ((ControlFieldType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/controlField.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ControlMM", new AXjcTreeChild(ControlType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Control", ((ControlType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ControllerMM", new AXjcTreeChild(ControllerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Controller";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ControllerPreferenceMM", new AXjcTreeChild(ControllerPreferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ControllerPreference", ((ControllerPreferenceType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"columnPreferences", "filters"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ControllersMM", new AXjcTreeChild(ControllersType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Controllers";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"controller"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CopyResourceMM", new AXjcTreeChild(CopyResourceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CopyResource";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_COPY.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"replacement"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CrossReferenceMM", new AXjcTreeChild(CrossReferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CrossReference";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CrossReferencesMM", new AXjcTreeChild(CrossReferencesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CrossReferences";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.engine", "IMG_CROSS_REFERENCE.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"crossReference"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomGenerationUnitMM", new AXjcTreeChild(CustomGenerationUnitType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CustomGenerationUnit";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_GENERATE_JAVA.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"generators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomPostActionMM", new AXjcTreeChild(CustomPostActionType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CustomPostAction";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/action.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"customGenerationUnit"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomizationClassParamMM", new AXjcTreeChild(CustomizationClassParamType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("CustomizationClassParam", ((CustomizationClassParamType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomizationsMM", new AXjcTreeChild(CustomizationsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Customizations", ((CustomizationsType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/customizations.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params"};
				entitySetNames =new String[] {"scrolledFormOrClientCanvasOrSection"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomizedPreferenceMM", new AXjcTreeChild(CustomizedPreferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CustomizedPreference";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"preference"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomizedScenarioMM", new AXjcTreeChild(CustomizedScenarioType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CustomizedScenario";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/CustomizedScenariosMM", new AXjcTreeChild(CustomizedScenariosType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "CustomizedScenarios";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"customizedScenario"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DatasourceMM", new AXjcTreeChild(DatasourceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Datasource";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DatasourcesMM", new AXjcTreeChild(DatasourcesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Datasources";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"datasource"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DateTextMM", new AXjcTreeChild(DateTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("DateText", ((DateTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/dateText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DateTimeMM", new AXjcTreeChild(DateTimeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("DateTime", ((DateTimeType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/dateTime.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DirtyContainerMM", new AXjcTreeChild(DirtyContainerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("DirtyContainer", ((DirtyContainerType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/DynamicClauseMM", new AXjcTreeChild(DynamicClauseType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "DynamicClause";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EditableFormTextMM", new AXjcTreeChild(EditableFormTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EditableFormText", ((EditableFormTextType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {"textColor", "textFont", "textImage"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ElementMM", new AXjcTreeChild(ElementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Element", ((ElementType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EmbeddedFieldMM", new AXjcTreeChild(EmbeddedFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EmbeddedField", ((EmbeddedFieldType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"columnField", "controlField"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EmbeddedIdFieldMM", new AXjcTreeChild(EmbeddedIdFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EmbeddedIdField", ((EmbeddedIdFieldType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"columnField", "controlField"};
				entitySetNames =new String[] {"embeddedField"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EncryptedTextMM", new AXjcTreeChild(EncryptedTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EncryptedText", ((EncryptedTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/encryptedText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntityElementMM", new AXjcTreeChild(EntityElementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "EntityElement";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntityElementsMM", new AXjcTreeChild(EntityElementsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "EntityElements";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"entityElement"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntityParamMM", new AXjcTreeChild(EntityParamType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EntityParam", ((EntityParamType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntitySetContentProviderMM", new AXjcTreeChild(EntitySetContentProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("EntitySetContentProvider", ((EntitySetContentProviderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/entitySet.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntitySetMM", new AXjcTreeChild(EntitySetType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "EntitySet";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/entitySet.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"entityElements", "queryReference"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/EntityTreeMM", new AXjcTreeChild(EntityTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "EntityTree";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/entity.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"manyToMany", "oneToMany", "oneToOne", "propertyField"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ExtendTreeMM", new AXjcTreeChild(ExtendTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ExtendTree";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"config"};
				entitySetNames =new String[] {"formPageOrScrolledFormOrSection"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ExtraTextMM", new AXjcTreeChild(ExtraTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ExtraText", ((ExtraTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/richText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FieldContainerMM", new AXjcTreeChild(FieldContainerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("FieldContainer", ((FieldContainerType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "layout", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FieldMM", new AXjcTreeChild(FieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Field";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FileTextMM", new AXjcTreeChild(FileTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("FileText", ((FileTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/fileText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FilterMM", new AXjcTreeChild(FilterType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Filter";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/filter.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FiltersMM", new AXjcTreeChild(FiltersType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Filters";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/filters.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"filter"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FontTextMM", new AXjcTreeChild(FontTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("FontText", ((FontTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.engine", "IMG_FONT.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FormPageMM", new AXjcTreeChild(FormPageType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("FormPage", ((FormPageType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/formPage.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "managedToolBar", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/FormattedTextMM", new AXjcTreeChild(FormattedTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("FormattedText", ((FormattedTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/formattedText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GMapMM", new AXjcTreeChild(GMapType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("GMap", ((GMapType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/gMap.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GenerationScenarioMM", new AXjcTreeChild(GenerationScenarioType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "GenerationScenario";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"modelPart", "rcpPart"};
				entitySetNames =new String[] {"generationUnit", "pluginEntity", "propertyField"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GenerationUnitMM", new AXjcTreeChild(GenerationUnitType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				GenerationUnitType  generationUnit = (GenerationUnitType) treeElement.getElement();
				if (null == generationUnit.getAdiResourceURI())
				    return concat("GenerationUnit", generationUnit.getType().name());
				else
				    try {
				        return concat("GenerationUnit", EngineTools.getInstanceKeys(generationUnit.getAdiResourceURI())[2].concat(" - ").concat(generationUnit.getType().name()));
				    } catch(Exception e) {
				        return generationUnit.getAdiResourceURI();
				    }
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_GENERATE_JAVA.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"generators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GeneratorMM", new AXjcTreeChild(GeneratorType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Generator";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_GENERATE_JAVA.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GeneratorsMM", new AXjcTreeChild(GeneratorsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Generators";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_GENERATE_JAVA.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"generator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GenericFieldMM", new AXjcTreeChild(GenericFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("GenericField", ((GenericFieldType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GridColumnGroupMM", new AXjcTreeChild(GridColumnGroupType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("GridColumnGroup", ((GridColumnGroupType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/gridColumnGroup.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"gridColumn"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GridColumnMM", new AXjcTreeChild(GridColumnType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("GridColumn", ((GridColumnType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/gridColumn.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GridMM", new AXjcTreeChild(GridType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Grid", ((GridType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/grid.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "columnPreferences", "contentProvider", "crossReferences", "filters", "headerMenuManager", "labelProvider", "layout", "listeners", "menuManager"};
				entitySetNames =new String[] {"gridColumnOrGridColumnGroup", "include"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/GroupMM", new AXjcTreeChild(GroupType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Group", ((GroupType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/group.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/HeaderMenuManagerMM", new AXjcTreeChild(HeaderMenuManagerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("HeaderMenuManager", ((HeaderMenuManagerType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pGroupMenu.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"actionOrMenuOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/HelpButtonMM", new AXjcTreeChild(HelpButtonType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("HelpButton", ((HelpButtonType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/helpButton.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/HyperlinkMM", new AXjcTreeChild(HyperlinkType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Hyperlink", ((HyperlinkType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/hyperlink.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/IconMM", new AXjcTreeChild(IconType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Icon";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/IconsMM", new AXjcTreeChild(IconsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Icons";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"icon"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ImageViewerMM", new AXjcTreeChild(ImageViewerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ImageViewer", ((ImageViewerType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/imageViewer.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/IncludeMM", new AXjcTreeChild(IncludeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Include", ((IncludeType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/include.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "customizations", "listeners", "params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/IncludeTreeMM", new AXjcTreeChild(IncludeTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("IncludeTree", ((IncludeTree) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/include.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"config"};
				entitySetNames =new String[] {"formPageOrScrolledFormOrSection"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ItemMM", new AXjcTreeChild(ItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Item", ((ItemType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/item.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "customizations", "params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/JointureAliasMM", new AXjcTreeChild(JointureAliasType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "JointureAlias";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/JointureAliasesMM", new AXjcTreeChild(JointureAliasesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "JointureAliases";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"jointureAlias"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/JointureMM", new AXjcTreeChild(JointureType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				JointureType  jointure = (JointureType) treeElement.getElement();
				JointureTypeEnum  jointureType = jointure.getJointureType();
				return concatNvl("Jointure:", null == jointureType ? "?" : jointureType.value(), jointure.getFieldName(), jointure.getSuffix());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/jointure.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"jointure"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/LabelMM", new AXjcTreeChild(LabelType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Label", ((LabelType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/label.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/LabelProviderMM", new AXjcTreeChild(LabelProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "LabelProvider";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/labelProvider.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/LayoutMM", new AXjcTreeChild(LayoutType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Layout";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/layout.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/LazyFetchContainerMM", new AXjcTreeChild(LazyFetchContainerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("LazyFetchContainer", ((LazyFetchContainerType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ListDetailContentProviderMM", new AXjcTreeChild(ListDetailContentProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ListDetailContentProvider", ((ListDetailContentProviderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/contentProvider.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ListenerMM", new AXjcTreeChild(ListenerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				ListenerType  listener = (ListenerType) treeElement.getElement();
				return "Listener ".concat(null == listener.getListenerTypes() ? "": listener.getListenerTypes());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/listener.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ListenersMM", new AXjcTreeChild(ListenersType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Listeners";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/listeners.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"listener"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ManagedToolBarMM", new AXjcTreeChild(ManagedToolBarType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ManagedToolBar", ((ManagedToolBarType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/managedToolBar.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"actionOrMenuActionOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ManyToManyMM", new AXjcTreeChild(ManyToManyType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ManyToMany";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"entityElements", "params", "queryReference"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MenuActionMM", new AXjcTreeChild(MenuActionType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("MenuAction", ((MenuActionType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/menuAction.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "params"};
				entitySetNames =new String[] {"actionOrMenuActionOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MenuItemMM", new AXjcTreeChild(MenuItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("MenuItem", ((MenuItemType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/menuItem.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MenuMM", new AXjcTreeChild(MenuType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Menu", ((MenuType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/menu.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities"};
				entitySetNames =new String[] {"menuOrItem"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MenuManagerMM", new AXjcTreeChild(MenuManagerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("MenuManager", ((MenuManagerType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/menuManager.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"actionOrMenuOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MessageMM", new AXjcTreeChild(MessageType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Message";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/message.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MessagesMM", new AXjcTreeChild(MessagesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Messages";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/messages.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"message"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ModelPartMM", new AXjcTreeChild(ModelPartType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ModelPart";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params", "pojoRewriters"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/MultiChoiceMM", new AXjcTreeChild(MultiChoiceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("MultiChoice", ((MultiChoiceType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.engine", "IMG_MULTICHOICE.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "listeners", "menuManager", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NativeContentProviderMM", new AXjcTreeChild(NativeContentProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("NativeContentProvider", ((NativeContentProviderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/contentProvider.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NavigationPathMM", new AXjcTreeChild(NavigationPathType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "NavigationPath";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_NAVIGATION.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NavigationPathsMM", new AXjcTreeChild(NavigationPathsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "NavigationPaths";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_NAVIGATION.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"navigationPath"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NavigatorTreeMM", new AXjcTreeChild(NavigatorTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("NavigatorTree", ((NavigatorTree) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "config"};
				entitySetNames =new String[] {"menuOrItem"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NodeMM", new AXjcTreeChild(NodeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Node", ((NodeType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/NumericTextMM", new AXjcTreeChild(NumericTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("NumericText", ((NumericTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/numericText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/OneToManyMM", new AXjcTreeChild(OneToManyType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "OneToMany";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"entityElements", "queryReference"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/OneToOneMM", new AXjcTreeChild(OneToOneType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("OneToOne", ((OneToOneType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/oneToOne.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PGroupMM", new AXjcTreeChild(PGroupType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PGroup", ((PGroupType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pGroup.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"pgroupToolItemOrPgroupMenu", "scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PGroupMenuMM", new AXjcTreeChild(PGroupMenuType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PGroupMenu", ((PGroupMenuType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pGroupMenu.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"menuItem"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PGroupToolItemMM", new AXjcTreeChild(PGroupToolItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PGroupToolItem", ((PGroupToolItemType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PShelfItemMM", new AXjcTreeChild(PShelfItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PShelfItem", ((PShelfItemType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "layout", "listeners"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PShelfMM", new AXjcTreeChild(PShelfType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PShelf", ((PShelfType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pShelf.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {"include", "pshelfItem"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ParamMM", new AXjcTreeChild(ParamType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Param", ((ParamType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/param.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ParamsMM", new AXjcTreeChild(ParamsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Params";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/params.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"param"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PartTreeMM", new AXjcTreeChild(PartTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PartTree";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"config"};
				entitySetNames =new String[] {"formPageOrInclude"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PathElementMM", new AXjcTreeChild(PathElementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PathElement";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pathElement.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PathElementsMM", new AXjcTreeChild(PathElementsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PathElements";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pathElement.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"pathElement"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PluginEntityMM", new AXjcTreeChild(PluginEntityType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PluginEntity", ((PluginEntityType) treeElement.getElement()).getEntityURI());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/pluginEntity.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"icons", "messages", "params", "pojoRewriters", "queryBuilder"};
				entitySetNames =new String[] {"generationUnit", "propertyField"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PojoRewriterMM", new AXjcTreeChild(PojoRewriterType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PojoRewriter";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PojoRewritersMM", new AXjcTreeChild(PojoRewritersType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PojoRewriters";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"pojoRewriter"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PojoSuperClassMM", new AXjcTreeChild(PojoSuperClassType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "PojoSuperClass";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PreferenceMM", new AXjcTreeChild(PreferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Preference";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"controllerPreference", "queryPreference"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/PropertyFieldMM", new AXjcTreeChild(PropertyFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("PropertyField", ((PropertyFieldType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/propertyField.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"columnField", "controlField"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryBuilderMM", new AXjcTreeChild(QueryBuilderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "QueryBuilder";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"params"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryContentProviderMM", new AXjcTreeChild(QueryContentProviderType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("QueryContentProvider", ((QueryContentProviderType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/contentProvider.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryOpenClauseMM", new AXjcTreeChild(QueryOpenClauseType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				QueryOpenClauseType  openClause = (QueryOpenClauseType) treeElement.getElement();
				return null == openClause.getTitle() ? "QueryOpenClause" : "QueryOpenClause: ".concat(openClause.getTitle());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/queryOpenClause.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"parameter"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryPaginationMM", new AXjcTreeChild(QueryPaginationType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "QueryPagination";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/queryPagination.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryParameterMM", new AXjcTreeChild(QueryParameterType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				QueryParameterType  parameter = (QueryParameterType) treeElement.getElement();
				return "QueryParameter: ".concat(null == parameter.getId() ? parameter.getProperty() : parameter.getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.jpa", "IMG_PARAMETER.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryPartMM", new AXjcTreeChild(QueryPartType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("QueryPart", ((QueryPartType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryPreferenceMM", new AXjcTreeChild(QueryPreferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("QueryPreference", ((QueryPreferenceType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/queryPreference.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"pagination"};
				entitySetNames =new String[] {"openClause", "parameter"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryReferenceMM", new AXjcTreeChild(QueryReferenceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("QueryReference", ((QueryReferenceType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.engine", "IMG_QUERY.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/QueryTreeMM", new AXjcTreeChild(QueryTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("QueryTree", ((QueryTree) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/query.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"customizedPreferences", "jointureAliases", "queryBuilder", "queryPreference"};
				entitySetNames =new String[] {"jointure"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RadioGroupMM", new AXjcTreeChild(RadioGroupType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RadioGroup", ((RadioGroupType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/radioGroup.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "layout", "listeners", "menuManager", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RcpPartMM", new AXjcTreeChild(RcpPartType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "RcpPart";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RefControlMM", new AXjcTreeChild(RefControlType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RefControl", ((RefControlType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "listeners", "menuManager", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RefFieldMM", new AXjcTreeChild(RefFieldType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RefField", ((RefFieldType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/refField.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"columnField", "controlField"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RefTextMM", new AXjcTreeChild(RefTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RefText", ((RefTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/refText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "labelProvider", "listeners", "menuManager", "params", "queryReference", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RemoveResourceMM", new AXjcTreeChild(RemoveResourceType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "RemoveResource";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_DELETE.gif");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ReplacementMM", new AXjcTreeChild(ReplacementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Replacement";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ResourceBundleMM", new AXjcTreeChild(ResourceBundleType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ResourceBundle";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ResourceBundlesMM", new AXjcTreeChild(ResourceBundlesType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ResourceBundles";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"resourceBundle"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RgbTextMM", new AXjcTreeChild(RgbTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RgbText", ((RgbTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.engine", "IMG_COLOR.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/RichTextMM", new AXjcTreeChild(RichTextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("RichText", ((RichTextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/richText.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/SashFormMM", new AXjcTreeChild(SashFormType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("SashForm", ((SashFormType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/sashForm.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ScenarioMM", new AXjcTreeChild(ScenarioType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Scenario";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ScenarioTreeMM", new AXjcTreeChild(ScenarioTreeWrapper.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "ScenarioTree";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"actionResources", "controllers", "customPostAction", "customizedScenarios", "generationScenario", "generators", "params", "pathElements", "scenarios"};
				entitySetNames =new String[] {"allActionResources"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ScenariosMM", new AXjcTreeChild(ScenariosType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Scenarios";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"scenario"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ScrolledCompositeMM", new AXjcTreeChild(ScrolledCompositeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ScrolledComposite", ((ScrolledCompositeType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/scrolledComposite.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ScrolledFormMM", new AXjcTreeChild(ScrolledFormType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ScrolledForm", ((ScrolledFormType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/scrolledForm.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "managedToolBar", "validators"};
				entitySetNames =new String[] {"action", "scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/SectionMM", new AXjcTreeChild(SectionType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Section", ((SectionType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/section.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "managedToolBar", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/SeparatorMM", new AXjcTreeChild(SeparatorType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Separator", ((SeparatorType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/separator.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/SetMM", new AXjcTreeChild(SetType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Set", ((SetType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "headerMenuManager", "listeners", "menuManager"};
				entitySetNames =new String[] {"include"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/StarRatingMM", new AXjcTreeChild(StarRatingType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("StarRating", ((StarRatingType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/starRating.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TableColumnMM", new AXjcTreeChild(TableColumnType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("TableColumn", ((TableColumnType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/tableColumn.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TableMM", new AXjcTreeChild(TableType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Table", ((TableType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/table.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "columnPreferences", "contentProvider", "crossReferences", "filters", "headerMenuManager", "labelProvider", "layout", "listeners", "menuManager"};
				entitySetNames =new String[] {"include", "tableColumn"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TabularMM", new AXjcTreeChild(TabularType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Tabular", ((TabularType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "columnPreferences", "contentProvider", "crossReferences", "filters", "headerMenuManager", "labelProvider", "layout", "listeners", "menuManager"};
				entitySetNames =new String[] {"include"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TextColorMM", new AXjcTreeChild(TextColorType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TextColor";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TextFontMM", new AXjcTreeChild(TextFontType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TextFont";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TextImageMM", new AXjcTreeChild(TextImageType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TextImage";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TextMM", new AXjcTreeChild(TextType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Text", ((TextType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/text.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners", "menuManager", "validators"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ToolBarMM", new AXjcTreeChild(ToolBarType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ToolBar", ((ToolBarType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/toolBar.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "layout", "listeners"};
				entitySetNames =new String[] {"toolItemOrSeparator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ToolItemMM", new AXjcTreeChild(ToolItemType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ToolItem", ((ToolItemType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/toolItem.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "action", "listeners", "menuAction"};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TreeElementMM", new AXjcTreeChild(TreeElementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TreeElement";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"treeNode"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TreeMM", new AXjcTreeChild(TreeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Tree", ((TreeType) treeElement.getElement()).getId());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/tree.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "headerMenuManager", "listeners", "menuManager"};
				entitySetNames =new String[] {"include"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TreeManagerTreeMM", new AXjcTreeChild(TreeManagerTree.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TreeManagerTree";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"treeElement"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/TreeNodeMM", new AXjcTreeChild(TreeNodeType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "TreeNode";
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ValidElementMM", new AXjcTreeChild(ValidElementType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ValidElement", ((ValidElementType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ValidableContainerMM", new AXjcTreeChild(ValidableContainerType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("ValidableContainer", ((ValidableContainerType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "dynamicClause", "layout", "listeners", "validators"};
				entitySetNames =new String[] {"scrolledFormOrSectionOrComposite"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ValidatorMM", new AXjcTreeChild(ValidatorType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Validator", ((ValidatorType) treeElement.getElement()).getKey());
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/validator.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/ValidatorsMM", new AXjcTreeChild(ValidatorsType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return "Validators";
			}
			@Override
			public Image getImage(AXjcTreeElement treeElement) {
				return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/validator.png");
			}
			@Override
			public void init() {
				refFieldNames =new String[] {};
				entitySetNames =new String[] {"validator"};
			}
		});
		treeChildMap.put("adi://org.adichatz.studio/model/WidgetMM", new AXjcTreeChild(WidgetType.class) {
			@Override
			public String getText(AXjcTreeElement treeElement) {
				return concat("Widget", ((WidgetType) treeElement.getElement()).getId());
			}
			@Override
			public void init() {
				refFieldNames =new String[] {"accessibilities", "listeners"};
				entitySetNames =new String[] {};
			}
		});
	}
}