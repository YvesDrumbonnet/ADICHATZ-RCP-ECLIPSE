/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Tue May 12 15:04:30 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.editor;

import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.CTabFolderController;
import org.adichatz.engine.controller.collection.CTabItemController;
import org.adichatz.engine.core.ATabularCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;

@AdiResourceURI(URI="adi://org.adichatz.studio/editor/ScenarioEditor")
public class ScenarioEditorActionResourcesItem extends EntityManagerCore {
	protected ATabularCore scenarioEditorActionResourcesTable;
	/**
	 * Creates ScenarioEditorActionResourcesItem.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param core controller
	 *            The collection controller linked to the class
	 */
	public ScenarioEditorActionResourcesItem(final AdiContext context, IContainerController parentController) {
		super(context);
		// do not create contents when context is null because that means that class is invoked from dynamic part
		if (null != context) {
			coreController = new CTabItemController("actionResourcesItem", parentController, this) {
				@Override
				public void createControl() {
					super.createControl();
					if (isValid()) {
						getItem().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "adichatzStudio", "scenario.action.resources"));
					}
				}
			};
			if (!((CTabFolderController) parentController).isDelayed())
				createContents();
		} else
			coreController = parentController;
	}

	/**
	 * creates contents for controller
	 */
	public void createContents(){
		
		// loads and instantiates the class ScenarioEditorActionResourcesTable.
		scenarioEditorActionResourcesTable  = new ScenarioEditorActionResourcesTable(context, coreController);
	}
}