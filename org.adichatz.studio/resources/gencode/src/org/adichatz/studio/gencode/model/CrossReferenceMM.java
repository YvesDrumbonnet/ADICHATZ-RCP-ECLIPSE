/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Mon Jul 06 18:32:51 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.CrossReferenceType;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/CrossReferenceMM")
public class CrossReferenceMM extends AXjcEntityMetaModel<CrossReferenceType> {
	/**
	 * Creates the MetaModel class for CrossReferenceMM.
	 *
	 */
	public CrossReferenceMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		create();
	}

	/**
	 * Create contents for MetaModel CrossReferenceMM.
	 */
	public void create(){
		
		/**
		 *  add a property field for field entitySetId
		 */
		new PropertyField(this, "entitySetId");
		
		/**
		 *  add a property field for field description
		 */
		new PropertyField(this, "description");
		
		/**
		 *  add a property field for field axmlDetailURI
		 */
		new PropertyField(this, "axmlDetailURI");
		
		/**
		 *  add a property field for field axmlTableURI
		 */
		new PropertyField(this, "axmlTableURI");
		
		/**
		 *  add a property field for field axmlQueryURI
		 */
		new PropertyField(this, "axmlQueryURI");
		
		/**
		 *  add a property field for field preferenceURI
		 */
		new PropertyField(this, "preferenceURI");
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<CrossReferenceType> getBeanClass() {
		return CrossReferenceType.class;
	}
}