/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Fri Feb 07 15:54:10 CET 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.editor;

import net.miginfocom.swt.MigLayout;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.collection.CompositeController;
import org.adichatz.engine.core.ATabularCore;
import org.adichatz.engine.core.EntityManagerCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.validation.EntityInjection;
import org.adichatz.generator.xjc.ScenarioTree;

@AdiResourceURI(URI="adi://org.adichatz.studio/editor/ScenarioEditor")
public class ScenarioEditorCustomScenarioComposite extends EntityManagerCore {
	protected ATabularCore scenarioEditorCustomsGrid;
	/**
	 * Creates ScenarioEditorCustomScenarioComposite.
	 *
	 * @param context
	 *            The context of the root controller
	 * @param core controller
	 *            The collection controller linked to the class
	 */
	public ScenarioEditorCustomScenarioComposite(final AdiContext context, IContainerController parentController) {
		super(context);
		// do not create contents when context is null because that means that class is invoked from dynamic part
		if (null != context) {
			coreController = new CompositeController("customScenarioComposite", parentController, this) {
				@Override
				public void afterInstantiateController() {
					breakInjection = true;
					super.afterInstantiateController();
				}
				@Override
				public void createControl() {
					super.createControl();
					if (isValid()) {
						getComposite().setLayout(new MigLayout("wrap","[grow,fill]","[grow,fill]"));
						getControl().setLayoutData("w 0:n:n, h 0:n:n");
					}
				}
				@Override
				public EntityInjection getEntityInjection() {
					if (null == entityInjection)
						entityInjection = new EntityInjection(this, getDataAccess().getDataCache().fetchEntity(((ScenarioTree) parentController.getEntity().getBean()).getCustomizedScenarios()));
					return entityInjection;
				}
			};
			createContents();
		} else
			coreController = parentController;
	}

	/**
	 * creates contents for controller
	 */
	public void createContents(){
		
		// loads and instantiates the class ScenarioEditorCustomsGrid.
		scenarioEditorCustomsGrid  = new ScenarioEditorCustomsGrid(context, coreController);
	}
}