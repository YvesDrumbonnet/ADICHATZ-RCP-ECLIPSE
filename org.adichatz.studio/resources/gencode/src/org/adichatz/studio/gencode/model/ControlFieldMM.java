/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Mon Jul 06 18:32:30 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.AEntityMetaModel;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.model.RefField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.ControlFieldType;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/ControlFieldMM")
public class ControlFieldMM extends AXjcEntityMetaModel<ControlFieldType> {
	/**
	 * Creates the MetaModel class for ControlFieldMM.
	 *
	 */
	public ControlFieldMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		pluginEntity.setSuperEntityURI("adi://org.adichatz.studio/model/ControlMM");
		create();
	}

	/**
	 * Create contents for MetaModel ControlFieldMM.
	 */
	public void create(){
		
		/**
		 *  add a join column (ManyToOne) for field validators
		 */
		RefField<?> refField;
		refField = new RefField(this, "validators", null, "adi://org.adichatz.studio/model/ValidatorsMM");
		
		/**
		 *  add a property field for field initialValue
		 */
		new PropertyField(this, "initialValue");
		
		/**
		 *  add a property field for field convertModelToTarget
		 */
		new PropertyField(this, "convertModelToTarget");
		
		/**
		 *  add a property field for field convertTargetToModel
		 */
		new PropertyField(this, "convertTargetToModel");
		
		/**
		 *  add a join column (ManyToOne) for field menuManager
		 */
		refField = new RefField(this, "menuManager", null, "adi://org.adichatz.studio/model/MenuManagerMM");
		
		/**
		 *  add a property field for field property
		 */
		new PropertyField(this, "property");
		
		/**
		 *  add a property field for field controlValueType
		 */
		new PropertyField(this, "controlValueType");
		
		/**
		 *  add a property field for field forceBinding
		 */
		new PropertyField(this, "forceBinding");
		
		/**
		 *  add a property field for field labelBackground
		 */
		new PropertyField(this, "labelBackground");
		
		/**
		 *  add a property field for field labelFont
		 */
		new PropertyField(this, "labelFont");
		
		/**
		 *  add a property field for field labelForeground
		 */
		new PropertyField(this, "labelForeground");
		
		/**
		 *  add a property field for field labelLayoutData
		 */
		new PropertyField(this, "labelLayoutData");
		
		/**
		 *  add a property field for field labelText
		 */
		new PropertyField(this, "labelText");
		
		/**
		 *  add a property field for field lazyFetches
		 */
		new PropertyField(this, "lazyFetches");
		
		/**
		 *  add a property field for field linkedControl
		 */
		new PropertyField(this, "linkedControl");
		
		/**
		 *  add a property field for field mandatory
		 */
		new PropertyField(this, "mandatory");
		
		/**
		 *  add a property field for field noLabel
		 */
		new PropertyField(this, "noLabel");
		
		/**
		 *  add a property field for field fieldBindManagerClassName
		 */
		new PropertyField(this, "fieldBindManagerClassName");
		addSuperFields();
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<ControlFieldType> getBeanClass() {
		return ControlFieldType.class;
	}
	@Override
	protected void addSuperFields(){
		AEntityMetaModel<?> superEntityMM = pluginEntity.getPluginEntityTree().getEntityMM("adi://org.adichatz.studio/model/ControlMM");
		fieldMap.putAll(superEntityMM.getFieldMap());
		super.addSuperFields();
	}
}