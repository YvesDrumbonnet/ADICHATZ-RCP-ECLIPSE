/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Sat Dec 07 15:15:46 CET 2019
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.AEntityMetaModel;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.model.RefField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.ColumnFieldType;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/ColumnFieldMM")
public class ColumnFieldMM extends AXjcEntityMetaModel<ColumnFieldType> {
	/**
	 * Creates the MetaModel class for ColumnFieldMM.
	 *
	 */
	public ColumnFieldMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		pluginEntity.setSuperEntityURI("adi://org.adichatz.studio/model/ValidElementMM");
		create();
	}

	/**
	 * Create contents for MetaModel ColumnFieldMM.
	 */
	public void create(){
		
		/**
		 *  add a property field for field columnImage
		 */
		new PropertyField(this, "columnImage");
		
		/**
		 *  add a property field for field columnText
		 */
		new PropertyField(this, "columnText");
		
		/**
		 *  add a property field for field columnValue
		 */
		new PropertyField(this, "columnValue");
		
		/**
		 *  add a property field for field columnBackground
		 */
		new PropertyField(this, "columnBackground");
		
		/**
		 *  add a property field for field columnForeground
		 */
		new PropertyField(this, "columnForeground");
		
		/**
		 *  add a property field for field columnFont
		 */
		new PropertyField(this, "columnFont");
		
		/**
		 *  add a join column (ManyToOne) for field accessibilities
		 */
		RefField<?> refField;
		refField = new RefField(this, "accessibilities", null, "adi://org.adichatz.studio/model/AccessibilitiesMM");
		
		/**
		 *  add a join column (ManyToOne) for field listeners
		 */
		refField = new RefField(this, "listeners", null, "adi://org.adichatz.studio/model/ListenersMM");
		
		/**
		 *  add a property field for field property
		 */
		new PropertyField(this, "property");
		
		/**
		 *  add a property field for field image
		 */
		new PropertyField(this, "image");
		
		/**
		 *  add a property field for field lazyFetches
		 */
		new PropertyField(this, "lazyFetches");
		
		/**
		 *  add a property field for field locale
		 */
		new PropertyField(this, "locale");
		
		/**
		 *  add a property field for field pack
		 */
		new PropertyField(this, "pack");
		
		/**
		 *  add a property field for field pattern
		 */
		new PropertyField(this, "pattern");
		
		/**
		 *  add a property field for field sorted
		 */
		new PropertyField(this, "sorted");
		
		/**
		 *  add a property field for field columnValueType
		 */
		new PropertyField(this, "columnValueType");
		
		/**
		 *  add a property field for field alignment
		 */
		new PropertyField(this, "alignment");
		
		/**
		 *  add a property field for field moveable
		 */
		new PropertyField(this, "moveable");
		
		/**
		 *  add a property field for field resizeable
		 */
		new PropertyField(this, "resizeable");
		
		/**
		 *  add a property field for field sortDirection
		 */
		new PropertyField(this, "sortDirection");
		
		/**
		 *  add a property field for field style
		 */
		new PropertyField(this, "style");
		
		/**
		 *  add a property field for field text
		 */
		new PropertyField(this, "text");
		
		/**
		 *  add a property field for field toolTipText
		 */
		new PropertyField(this, "toolTipText");
		
		/**
		 *  add a property field for field width
		 */
		new PropertyField(this, "width");
		addSuperFields();
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<ColumnFieldType> getBeanClass() {
		return ColumnFieldType.class;
	}
	@Override
	protected void addSuperFields(){
		AEntityMetaModel<?> superEntityMM = pluginEntity.getPluginEntityTree().getEntityMM("adi://org.adichatz.studio/model/ValidElementMM");
		fieldMap.putAll(superEntityMM.getFieldMap());
		super.addSuperFields();
	}
}