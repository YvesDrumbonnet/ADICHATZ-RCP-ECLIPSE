/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Tue May 12 15:04:29 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.editor;

import org.adichatz.engine.common.AdichatzApplication;
import org.adichatz.engine.controller.IContainerController;
import org.adichatz.engine.controller.field.TableColumnController;
import org.adichatz.engine.core.ATabularCore;
import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.extra.ColumnViewerSorter;
import org.adichatz.engine.plugin.AdiContext;
import org.adichatz.engine.tabular.ATabularContentProvider;
import org.adichatz.engine.viewer.NativeContentProvider;
import org.adichatz.generator.xjc.PathElementType;
import org.adichatz.studio.xjc.controller.FeaturesTableController;
import org.eclipse.swt.graphics.Image;

@AdiResourceURI(URI="adi://org.adichatz.studio/editor/ScenarioEditor")
public class ScenarioEditorPathElementsTable extends ATabularCore<PathElementType> {
	// the TableColumnController typeTCTC.
	private TableColumnController typeTCTC;
	// the TableColumnController locationTCTC.
	private TableColumnController locationTCTC;
	public ScenarioEditorPathElementsTable(final AdiContext context, IContainerController parentController) {
		super(context);
		tabularController = new FeaturesTableController<PathElementType>("pathElementsTable", parentController, this) {
			@Override
			public void createControl() {
				if (isValid()) {
					beanClass = PathElementType.class;
				}
				super.createControl();
				if (isValid()) {
					ATabularContentProvider contentProvider$1 = new NativeContentProvider("pathElement");
					contentProvider$1.setTabularController(tabularController);
					getControl().setLayoutData("h 0:n:n, w 0:n:n");
				}
			}
		};
		tabularController.setPluginResources(AdichatzApplication.getPluginResources("org.adichatz.studio"));
		coreController = tabularController;
		
		// Creates control for TableColumnController typeTCTC
		typeTCTC = new TableColumnController<PathElementType>("typeTC", tabularController) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getColumn().setImage(AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/path.png"));
					getControl().getColumn().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "pathElement", "type"));
					setColumnViewerSorter(ColumnViewerSorter.ASC);
				}
			}
			@Override
			public Image getColumnImage(PathElementType row) {
				if (null == row.getType())
				    return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/path.png");
				switch (row.getType()) {
				case DIRECTORY:
				    return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/directory.png");
				case PLUGIN:
				    return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/bundle.png");
				case LIBRARY:
				    return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "xjc/library.png");
				case PROJECT:
				    return AdichatzApplication.getInstance().getImage("org.adichatz.studio", "IMG_JAVA_PROJECT.png");
				}
				return null;
			}
			@Override
			public Object getValue(PathElementType row) {
				return row.getType();
			}
			@Override
			public String getColumnText(PathElementType row) {
				return  null == row.getType() ? null : row.getType().value();
			}
		};
		// Creates control for TableColumnController locationTCTC
		locationTCTC = new TableColumnController<PathElementType>("locationTC", tabularController) {
			@Override
			public void createControl() {
				super.createControl();
				if (isValid()) {
					getControl().getColumn().setText(AdichatzApplication.getInstance().getMessage("org.adichatz.studio", "pathElement", "location"));
					setColumnViewerSorter(ColumnViewerSorter.ASC);
				}
			}
			@Override
			public String getValue(PathElementType row) {
				return row.getLocation();
			}
			@Override
			public String getColumnText(PathElementType row) {
				return row.getLocation();
			}
		};
	}
	
	@Override
	public Object getId(Object element) {
		return null;
	}
}