/**********************************************************************************************
 * This class was automatically generated by Adichatz tools on Mon Jul 06 18:33:10 CEST 2020
 *
 * 				+----------------------------------------+
 * 				| BE CAREFUL BEFORE UPDATING THIS CLASS! |
 * 				+----------------------------------------+
 *
 * Changes will be transient up to next generation process.
 * **********************************************************************************************/
package org.adichatz.studio.gencode.model;

import org.adichatz.engine.extra.AdiResourceURI;
import org.adichatz.engine.model.AEntityMetaModel;
import org.adichatz.engine.model.PropertyField;
import org.adichatz.engine.model.RefField;
import org.adichatz.engine.plugin.PluginEntity;
import org.adichatz.generator.xjc.QueryTree;
import org.adichatz.studio.xjc.scenario.AXjcEntityMetaModel;
import org.adichatz.studio.xjc.scenario.XjcEntitySet;

@AdiResourceURI(URI="adi://org.adichatz.studio/model/QueryTreeMM")
public class QueryTreeMM extends AXjcEntityMetaModel<QueryTree> {
	/**
	 * Creates the MetaModel class for QueryTreeMM.
	 *
	 */
	public QueryTreeMM(PluginEntity<?> pluginEntity) {
		super(pluginEntity);
		pluginEntity.setSuperEntityURI("adi://org.adichatz.studio/model/QueryPartMM");
		create();
	}

	/**
	 * Create contents for MetaModel QueryTreeMM.
	 */
	public void create(){
		
		/**
		 *  add a property field for field whereClause
		 */
		new PropertyField(this, "whereClause");
		
		/**
		 *  add a property field for field sqlClause
		 */
		new PropertyField(this, "sqlClause");
		
		/**
		 *  add a join column (ManyToOne) for field jointureAliases
		 */
		RefField<?> refField;
		refField = new RefField(this, "jointureAliases", null, "adi://org.adichatz.studio/model/JointureAliasesMM");
		
		/**
		 *  add a join column (ManyToOne) for field queryPreference
		 */
		refField = new RefField(this, "queryPreference", null, "adi://org.adichatz.studio/model/QueryPreferenceMM");
		
		/**
		 *  add a join column (ManyToOne) for field customizedPreferences
		 */
		refField = new RefField(this, "customizedPreferences", null, "adi://org.adichatz.studio/model/CustomizedPreferenceMM");
		
		/**
		 *  add a join column (ManyToOne) for field queryBuilder
		 */
		refField = new RefField(this, "queryBuilder", null, "adi://org.adichatz.studio/model/QueryBuilderMM");
		
		/**
		 *  add a property field for field parentQueryManagerURI
		 */
		new PropertyField(this, "parentQueryManagerURI");
		
		/**
		 *  add a property field for field lazyFetches
		 */
		new PropertyField(this, "lazyFetches");
		
		/**
		 *  add a property field for field queryType
		 */
		new PropertyField(this, "queryType");
		
		/**
		 *  add a property field for field valid
		 */
		new PropertyField(this, "valid");
		
		// add one to many for field 'jointure' (parent clause='null')
		XjcEntitySet oneToMany;
		oneToMany = new XjcEntitySet(this, "jointure", null);
		oneToMany.addElementEntity("adi://org.adichatz.studio/model/JointureMM");
		addSuperFields();
	}
	
	/* (non-Javadoc)
	 * @see org.adichatz.engine.model.AEntityMetaModel#getBeanClass()
	 */
	@Override
	public Class<QueryTree> getBeanClass() {
		return QueryTree.class;
	}
	@Override
	protected void addSuperFields(){
		AEntityMetaModel<?> superEntityMM = pluginEntity.getPluginEntityTree().getEntityMM("adi://org.adichatz.studio/model/QueryPartMM");
		fieldMap.putAll(superEntityMM.getFieldMap());
		super.addSuperFields();
	}
}