title = Choose a listener type
category = Category
entity = Entity
dataBinding = dataBinding
lifeCycle = Life Cycle
control = Control
runnable = Runnable
entityInjection = Entity Injection;

type = Type
description = Description

###################
# Entity Listener #
###################
CHANGE_STATUS = When status of the entity changed.
LOCK_ENTITY = Entity is locked or unlocked.
BEFORE_PROPERTY_CHANGE = Change on a property of the bean (Before validators in the binding process).
WHEN_PROPERTY_CHANGE = Change on a property of the bean (Inside the bean interceptor).
AFTER_PROPERTY_CHANGE = Change on a property of the bean (After validators in the binding process).
PRE_SAVE = Before entity is sent to the server to be saved.
POST_SAVE= After entity is sent to the server to be saved.
PRE_REFRESH = Before entity is sent to the server to be refreshed.
POST_REFRESH = After entity was refreshed on the server.

########################
# DataBinding Listener #
########################
PRE_SAVE_ENTITIES = Before processing the saveEntities method of a DataBinding instance.
POST_SAVE_ENTITIES = After processing the saveEntities method of a DataBinding instance.
PRE_REFRESH_ENTITIES = Before processing the refreshEntities method of a DataBinding instance.
POST_REFRESH_ENTITIES = After processing the refreshEntities method of a DataBinding instance.
ADD_ENTITY = When adding Entity to DataBinding dispatcher.
REMOVE_ENTITY = When removing Entity from DataBinding dispatcher.

#######################
# Life Cycle Listener #
#######################
AFTER_INITIALIZE = Just after the instantiation of the controller.
BEFORE_CREATE_CONTROL = Before creating the control (UI Component:/ Text, Section...). The controller and all the children controller were initialized.
AFTER_CREATE_CONTROL = After all controls of the generated UI class and all controls of children controllers have been created.
BEFORE_SYNCHRONIZE = Before entity is bound to the controller.
AFTER_SYNCHRONIZE = After entity is bound to the controller.
BEFORE_END_LIFE_CYCLE = Before EndLifeCycle is started.
AFTER_END_LIFE_CYCLE = After EndLifeCycle finished.
AFTER_DISPOSE = After controller is disposed.
BEFORE_DISPOSE = Before controller is disposed.
POST_CREATE_PART = After part is created and activated for the first time (end of all initialization processes).

####################
# Control Listener #
####################
MODIFY_TEXT = Value managed by the control has changed.
CHECK_STATE = Check state has changed
SELECTION_CHANGED = Selected row has changed.
POST_SELECTION_CHANGED = After row selection has changed.
WIDGET_SELECTED = Value selected in the control ha changed.
DOUBLE_CLICK = Double-click is detected.
REFRESH = Refresh action is detected.
AFTER_FIELD_CHANGE = User action produce a change on a field controller (After validators in the binding process).
BEFORE_FIELD_CHANGE = User action produce a change on a field controller (Before validators in the binding process).


#####################
# Runnable Listener #
#####################
PRE_RUN = Before "running" action or hyper link. 
POST_RUN = After "running" action or hyper link.

#####################
# Combined Listener #
#####################
BEFORE_ENTITY_INJECTION = Before injecting entity
AFTER_ENTITY_INJECTION = After injecting entity
POST_MESSAGE = After a message (error, warning or info) is added or removed.  
