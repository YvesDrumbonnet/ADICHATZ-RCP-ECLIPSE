<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<containerTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" entityURI="adi://org.adichatz.studio/model/QueryTreeMM" id="detailPart" xsi:noNamespaceSchemaLocation="https://yvesdrumbonnet.github.io/Adichatz-RCP-Update-Site/xsd/generator/containerTree.xsd">
    <pluginEntity/>
    <scrolledComposite dirtyManagement="false" id="itemComposite">
        <pluginEntity/>
        <listeners>
            <listener listenerTypes="AFTER_SYNCHRONIZE">
                <code>displaySQLorWhereClause();</code>
            </listener>
            <listener listenerTypes="AFTER_PROPERTY_CHANGE">
                <code>displaySQLorWhereClause();</code>
            </listener>
            <listener listenerTypes="POST_REFRESH">
                <code>displaySQLorWhereClause();</code>
            </listener>
        </listeners>
        <additionalCode>import org.adichatz.engine.cache.IEntity;
import org.adichatz.generator.wrapper.QueryTreeWrapper;
private boolean doit = true;
private void displaySQLorWhereClause() {
    if (doit) {
        doit = false;
        QueryTreeWrapper queryTree = ((IEntity&lt;QueryTreeWrapper&gt;) getEntity()).getBean();
        TextController sqlClause = #CONTROLLER(sqlClause);
        TextController whereClause = #CONTROLLER(whereClause);
        switch (queryTree.getQueryType()) {
        case JQL:
            sqlClause.getControl().setVisible(false);
            sqlClause.getLinkedController().getControl().setVisible(false);
            whereClause.getControl().setVisible(true);
            whereClause.getLinkedController().getControl().setVisible(true);
            break;
        case SQL:
            sqlClause.getControl().setVisible(true);
            sqlClause.getLinkedController().getControl().setVisible(true);
            whereClause.getControl().setVisible(false);
            whereClause.getLinkedController().getControl().setVisible(false);
            break;
        }
        sqlClause.getParentController().getComposite().layout();
        doit = true;
    }
}</additionalCode>
        <layout layoutConstraints="wrap 2, hidemode 3" columnConstraints="[align right]10[fill,grow]" rowConstraints="[]"/>
        <hyperlink text="#MSG(queryPart, entityURI).concat(&quot;:&quot;)" runnableClassName="org.adichatz.studio.xjc.editor.runnable.OpenResourceURIRunnable" id="entityURIQueryTreePART$1">
            <pluginEntity/>
        </hyperlink>
        <text property="entityURI" labelText="#MSG(queryPart, entityURI).concat(&quot;:&quot;)" linkedControl="entityURIQueryTreePART$1" noLabel="true" controllerClassName="org.adichatz.studio.xjc.controller.AdiResourceUriTextController" id="entityURI">
            <pluginEntity/>
        </text>
        <label text="#MSG(queryPart, suffix).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="suffix$1"/>
        <text property="suffix" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(queryPart, suffix).concat(&quot;:&quot;)" linkedControl="suffix$1" mandatory="true" controllerClassName="org.adichatz.studio.xjc.controller.SuffixIdTextController" id="suffix">
            <pluginEntity/>
            <validators>
                <validator key="mandatoryField" validatorClassName="org.adichatz.engine.validation.MandatoryValidator"/>
            </validators>
        </text>
        <label text="#MSG(queryTree, queryType).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="queryType$1"/>
        <radioGroup property="queryType" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(queryTree, queryType).concat(&quot;:&quot;)" linkedControl="queryType$1" id="queryType">
            <pluginEntity/>
            <labelProvider>
                <textCode>return ((QueryTypeEnum) element).value();</textCode>
            </labelProvider>
            <initValues>import org.adichatz.generator.xjc.QueryTypeEnum
import java.util.Arrays
return Arrays.asList(QueryTypeEnum.class.getEnumConstants());</initValues>
        </radioGroup>
        <label text="#MSG(queryTree, sqlClause).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="sqlClause$1"/>
        <text property="sqlClause" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(queryTree, sqlClause).concat(&quot;:&quot;)" linkedControl="sqlClause$1" fieldBindManagerClassName="org.adichatz.studio.xjc.data.XjcFieldBindingManager" controllerClassName="org.adichatz.studio.xjc.controller.CodeTextController" style="SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL | AdiSWT.EXPANDABLE" id="sqlClause">
            <pluginEntity/>
        </text>
        <label text="#MSG(queryTree, whereClause).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="whereClause$1"/>
        <text property="whereClause" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(queryTree, whereClause).concat(&quot;:&quot;)" linkedControl="whereClause$1" fieldBindManagerClassName="org.adichatz.studio.xjc.data.XjcFieldBindingManager" controllerClassName="org.adichatz.studio.xjc.controller.CodeTextController" style="SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL | AdiSWT.EXPANDABLE" id="whereClause">
            <pluginEntity/>
        </text>
        <label text="#MSG(queryTree, lazyFetches).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="lazyFetches$1"/>
        <text property="lazyFetches" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(queryTree, lazyFetches).concat(&quot;:&quot;)" linkedControl="lazyFetches$1" id="lazyFetches">
            <pluginEntity/>
        </text>
        <label text="#MSG(validElement, valid).concat(&quot;:&quot;)" foreground="#COLOR(IFormColors.TITLE)" id="valid$1"/>
        <text property="valid" labelForeground="#COLOR(IFormColors.TITLE)" labelText="#MSG(validElement, valid).concat(&quot;:&quot;)" linkedControl="valid$1" fieldBindManagerClassName="org.adichatz.studio.xjc.data.XjcFieldBindingManager" controllerClassName="org.adichatz.studio.xjc.controller.XjcTextController" id="valid">
            <pluginEntity/>
        </text>
    </scrolledComposite>
</containerTree>
